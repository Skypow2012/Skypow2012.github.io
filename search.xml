<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>『001』如何在自己的网页里引入一个聊天机器人(。・∀・)ノ</title>
    <url>/2019/02/15/howToAddRobot/</url>
    <content><![CDATA[<p><img src="https://img-blog.csdnimg.cn/2019021423465864.png#pic_center" alt="Maxmon"></p>
<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><a id="more"></a>
<blockquote>
<p>我们常常能一些中二攻城狮的博客中看到一个聊天机器人。</p>
</blockquote>
<blockquote>
<p>那么，他们是怎么实现的呢？</p>
</blockquote>
<blockquote>
<p>其实，我们可以通过鼠标右键，代码调试来看到它们的源码，来学习他们的创建方法。</p>
</blockquote>
<blockquote>
<p>今天，就让我们直接来引用一下先感受感受吧(✿◕‿◕✿)！</p>
</blockquote>
<h2 id="如何引入"><a href="#如何引入" class="headerlink" title="如何引入"></a>如何引入</h2><ul>
<li>通过HTML<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--需要将天奇机器人代码放入body的底部--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://tekii.cn/public/html5_iat/js/mmHelper.js&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure></li>
<li>通过JS<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> mmHS = <span class="built_in">document</span>.createElement(<span class="string">&#x27;script&#x27;</span>);</span><br><span class="line">mmHS.src = <span class="string">&#x27;https://tekii.cn/public/html5_iat/js/mmHelper.js&#x27;</span>;</span><br><span class="line"><span class="built_in">document</span>.body.append(mmHS)</span><br></pre></td></tr></table></figure>
<h2 id="如何使用"><a href="#如何使用" class="headerlink" title="如何使用"></a>如何使用</h2></li>
<li>移动端按住Maxmon机器人 进入语音聊天</li>
<li>桌面端点击后，进入语音聊天<h2 id="可用的命令"><a href="#可用的命令" class="headerlink" title="可用的命令"></a>可用的命令</h2><code>doSuccessThing(msg)</code> 可直接和天奇机器人聊天<h2 id="大致的原理"><a href="#大致的原理" class="headerlink" title="大致的原理"></a>大致的原理</h2>通过JS，在HTML中创建一个DOM对象，然后再给DOM对象addEventListener()，通过网络请求来接入图灵机器人系统（类似以前的小黄鸡?）。<h2 id="项目地址"><a href="#项目地址" class="headerlink" title="项目地址"></a>项目地址</h2><blockquote>
<p><a href="https://gitee.com/ko-orz/html5_iat">https://gitee.com/ko-orz/html5_iat</a></p>
</blockquote>
<h2 id="感谢"><a href="#感谢" class="headerlink" title="感谢"></a>感谢</h2></li>
<li>科大讯飞提供语音识别技术</li>
<li>图灵机器人提供文字聊天技术</li>
<li>写了这篇文章的2019年2月15日00时17分的Maxmon</li>
</ul>
]]></content>
      <tags>
        <tag>AI</tag>
      </tags>
  </entry>
  <entry>
    <title>【MySQL】『001』设置外键错误汇总( $ _ $ )</title>
    <url>/2019/02/15/MySQLErr/</url>
    <content><![CDATA[<blockquote>
<p>Error ERROR 1022、Error ERROR 1215、Error ERROR 1452</p>
</blockquote>
<a id="more"></a>
<h2 id="错误代码"><a href="#错误代码" class="headerlink" title="错误代码"></a>错误代码</h2><blockquote>
<p>Error ERROR 1022: Can’t write; duplicate key in table ‘#sql-76b_7cbf’<br># 这类错误，主要是外键名称重复导致，改为不同名字就可以了</p>
</blockquote>
<blockquote>
<p>Error ERROR 1215 (HY000): Cannot add foreign key constraint<br># 当出现错误时，仔细检查数据库表和字段的设计，要保持一致</p>
</blockquote>
<blockquote>
<p>Error ERROR 1452 (23000): Cannot add or update a child row: a foreign key constraint fails<br> # 一般就是弄反了，外键是需要设置在子表上的，去REFERENCES一个父表</p>
</blockquote>
<h2 id="级联操作"><a href="#级联操作" class="headerlink" title="级联操作"></a>级联操作</h2><blockquote>
<p><code>CASCADE</code> # 删除包含与已删除键值有参照关系的所有记录<br><code>SET NULL</code> # 修改包含与已删除键值有参照关系的所有记录，使用NULL值替换(只能用于已标记为NOT NULL的 字段)<br><code>RESTRICT</code> # 拒绝删除要求，直到使用删除键值的辅助表被手工删除，并且没有参照时(这是默认设置，也是最&gt; 安全的设置)<br><code>NO ACTION</code> # 什么都不做</p>
</blockquote>
<h2 id="正确的示例"><a href="#正确的示例" class="headerlink" title="正确的示例"></a>正确的示例</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> <span class="string">`main`</span>.<span class="string">`child`</span> <span class="comment"># 给子表设置外键</span></span><br><span class="line">  <span class="keyword">ADD</span> <span class="keyword">CONSTRAINT</span> <span class="string">`for_idx`</span></span><br><span class="line">  <span class="keyword">FOREIGN</span> <span class="keyword">KEY</span> (<span class="string">`idcard`</span>) <span class="comment"># 子表的外键</span></span><br><span class="line">  <span class="keyword">REFERENCES</span> <span class="string">`main`</span>.<span class="string">`parent`</span> (<span class="string">`idcard`</span>) <span class="comment"># 主表的键</span></span><br><span class="line">  <span class="keyword">ON</span> <span class="keyword">DELETE</span> <span class="keyword">CASCADE</span> <span class="comment"># 主表删除数据跟着删除 相应的还有</span></span><br><span class="line">  <span class="keyword">ON</span> <span class="keyword">UPDATE</span> <span class="keyword">CASCADE</span> <span class="comment"># 主表更新外键跟着更新</span></span><br></pre></td></tr></table></figure>
<h2 id="英语学习"><a href="#英语学习" class="headerlink" title="英语学习"></a>英语学习</h2><p> <code>CONSTRAINT</code> <em>[名词]</em> 约束, 强制, 局促<br><code>REFERENCES</code> <em>[名词/动词]</em> 参考<br><code>CASCADE</code> <em>[名词]</em> 级联, 小瀑布 <em>[动词]</em> 喷流<br><code>FOREIGN</code> <em>[形容词]</em> 国外, 对外, 外</p>
<h2 id="特别感谢"><a href="#特别感谢" class="headerlink" title="特别感谢"></a>特别感谢</h2><p>[1] Microtiger. <a href="https://www.cnblogs.com/microtiger/p/7814177.html">MySQL外键使用详解</a> 2017-11-10 13:38<br>[2] 钟绍威. <a href="https://blog.csdn.net/noble510520/article/details/51463042">ERROR 1452 (23000): Cannot add or update a child row: a foreign key constraint……</a> 2016-05-20<br>[3] 爱qiu求. <a href="https://wenku.baidu.com/view/935a8bd384254b35eefd3452.html">正式论文格式</a> 2011-06-29</p>
]]></content>
      <tags>
        <tag>MySQL</tag>
      </tags>
  </entry>
  <entry>
    <title>『002』写个象棋AI来和爷爷下棋(　o=^•ェ•)o　┏━┓</title>
    <url>/2019/02/18/playChineseChess/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote>
<p>小时候一直和爷爷下象棋，可是除了耍赖，就从来没有赢过(lll￢ω￢)</p>
</blockquote>
<blockquote>
<p>有一次做梦…我写出了一个能赢过爷爷的象棋AI，但却没有机会和他下了</p>
</blockquote>
<blockquote>
<p>就觉得有必要在还有机会的时候自己写一个智能体出来，也算是经我之手正式地赢了爷爷(●ˇ∀ˇ●)</p>
</blockquote>
<a id="more"></a>
<h2 id="先画一个棋盘"><a href="#先画一个棋盘" class="headerlink" title="先画一个棋盘"></a>先画一个棋盘</h2><ul>
<li>以下代码来自<a href="http://www.cnblogs.com/SeeYouBug/"><code>欲泪成雪</code></a>的原创分享，加上我适当的修改<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- saved from url=(0037)https://www.tekii.cn/public/chinese_chess/ --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">head</span>&gt;</span><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;Content-Type&quot;</span> <span class="attr">content</span>=<span class="string">&quot;text/html; charset=UTF-8&quot;</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>中国象棋<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;layout&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">canvas</span> <span class="attr">id</span>=<span class="string">&quot;canvas1&quot;</span> <span class="attr">style</span>=<span class="string">&quot;background-color:burlywood&quot;</span> <span class="attr">width</span>=<span class="string">&quot;1005&quot;</span> <span class="attr">height</span>=<span class="string">&quot;1105&quot;</span>&gt;</span>不支持Canvas<span class="tag">&lt;/<span class="name">canvas</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> object = &#123;</span></span><br><span class="line"><span class="javascript">                <span class="comment">//初始化</span></span></span><br><span class="line"><span class="javascript">                init: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                    <span class="comment">//棋盘外框</span></span></span><br><span class="line"><span class="javascript">                    <span class="keyword">var</span> canvas1 = <span class="built_in">document</span>.getElementById(<span class="string">&quot;canvas1&quot;</span>);</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">this</span>.ctx = canvas1.getContext(<span class="string">&quot;2d&quot;</span>);</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">this</span>.ctx.lineWidth = <span class="number">5</span>;</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">this</span>.ctx.clearRect(<span class="number">0</span>, <span class="number">0</span>, <span class="number">1005</span>, <span class="number">1105</span>);</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">this</span>.ctx.strokeStyle = <span class="string">&quot;brown&quot;</span>;</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">this</span>.ctx.strokeRect(<span class="number">100</span>, <span class="number">100</span>, <span class="number">800</span>, <span class="number">900</span>);</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">                    <span class="built_in">this</span>.row();</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">this</span>.cols();</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">this</span>.drawFont();</span></span><br><span class="line"><span class="javascript">                    <span class="comment">//注意：现在的原点中心为（100,100），所以下面的所有坐标在原来的基础上加（x+100,y+100）；</span></span></span><br><span class="line"><span class="javascript">                    <span class="comment">//中心点一（1000,200）</span></span></span><br><span class="line"><span class="javascript">                    <span class="built_in">this</span>.center(<span class="number">200</span>, <span class="number">300</span>);</span></span><br><span class="line"><span class="javascript">                    <span class="comment">//中心点二（700,200）</span></span></span><br><span class="line"><span class="javascript">                    <span class="built_in">this</span>.center(<span class="number">800</span>, <span class="number">300</span>);</span></span><br><span class="line"><span class="javascript">                    <span class="comment">//中心点三（5,300）</span></span></span><br><span class="line"><span class="javascript">                    <span class="built_in">this</span>.center(<span class="number">100</span>, <span class="number">400</span>);</span></span><br><span class="line"><span class="javascript">                    <span class="comment">//中心点四（200,300）</span></span></span><br><span class="line"><span class="javascript">                    <span class="built_in">this</span>.center(<span class="number">300</span>, <span class="number">400</span>);</span></span><br><span class="line"><span class="javascript">                    <span class="comment">//中心点五（400,300）</span></span></span><br><span class="line"><span class="javascript">                    <span class="built_in">this</span>.center(<span class="number">500</span>, <span class="number">400</span>);</span></span><br><span class="line"><span class="javascript">                    <span class="comment">//中心点六（600,300）</span></span></span><br><span class="line"><span class="javascript">                    <span class="built_in">this</span>.center(<span class="number">700</span>, <span class="number">400</span>);</span></span><br><span class="line"><span class="javascript">                    <span class="comment">//中心点七（800,300）</span></span></span><br><span class="line"><span class="javascript">                    <span class="built_in">this</span>.center(<span class="number">900</span>, <span class="number">400</span>);</span></span><br><span class="line"><span class="javascript">                    <span class="comment">//中心点八（800,600）</span></span></span><br><span class="line"><span class="javascript">                    <span class="built_in">this</span>.center(<span class="number">900</span>, <span class="number">700</span>);</span></span><br><span class="line"><span class="javascript">                    <span class="comment">//中心点九（600,600）</span></span></span><br><span class="line"><span class="javascript">                    <span class="built_in">this</span>.center(<span class="number">700</span>, <span class="number">700</span>);</span></span><br><span class="line"><span class="javascript">                    <span class="comment">//中心点十（400,600）</span></span></span><br><span class="line"><span class="javascript">                    <span class="built_in">this</span>.center(<span class="number">500</span>, <span class="number">700</span>);</span></span><br><span class="line"><span class="javascript">                    <span class="comment">//中心点十一（200,600）</span></span></span><br><span class="line"><span class="javascript">                    <span class="built_in">this</span>.center(<span class="number">300</span>, <span class="number">700</span>);</span></span><br><span class="line"><span class="javascript">                    <span class="comment">//中心点十二（5,600）</span></span></span><br><span class="line"><span class="javascript">                    <span class="built_in">this</span>.center(<span class="number">100</span>, <span class="number">700</span>);</span></span><br><span class="line"><span class="javascript">                    <span class="comment">//中心点十三（700,700）</span></span></span><br><span class="line"><span class="javascript">                    <span class="built_in">this</span>.center(<span class="number">800</span>, <span class="number">800</span>);</span></span><br><span class="line"><span class="javascript">                    <span class="comment">//中心点十四（100,700）</span></span></span><br><span class="line"><span class="javascript">                    <span class="built_in">this</span>.center(<span class="number">200</span>, <span class="number">800</span>);</span></span><br><span class="line">                &#125;,</span><br><span class="line"><span class="javascript">                <span class="comment">//此方法用来画棋盘线</span></span></span><br><span class="line"><span class="javascript">                LineDrawing: <span class="function"><span class="keyword">function</span> (<span class="params">mx, my, lx, ly</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">this</span>.ctx.beginPath();</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">this</span>.ctx.moveTo(mx, my);</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">this</span>.ctx.lineTo(lx, ly);</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">this</span>.ctx.stroke();</span></span><br><span class="line">                &#125;,</span><br><span class="line"><span class="javascript">                <span class="comment">//棋盘行</span></span></span><br><span class="line"><span class="javascript">                row: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">200</span>; i &lt;= <span class="number">900</span>; i += <span class="number">100</span>) &#123;</span></span><br><span class="line"><span class="javascript">                        <span class="built_in">this</span>.ctx.beginPath();</span></span><br><span class="line"><span class="javascript">                        <span class="built_in">this</span>.ctx.moveTo(<span class="number">100</span>, i);</span></span><br><span class="line"><span class="javascript">                        <span class="built_in">this</span>.ctx.lineTo(<span class="number">900</span>, i);</span></span><br><span class="line"><span class="javascript">                        <span class="built_in">this</span>.ctx.stroke();</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;,</span><br><span class="line"><span class="javascript">                <span class="comment">//棋盘列</span></span></span><br><span class="line"><span class="javascript">                cols: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">200</span>; i &lt;= <span class="number">800</span>; i += <span class="number">100</span>) &#123;</span></span><br><span class="line"><span class="javascript">                        <span class="built_in">this</span>.ctx.beginPath();</span></span><br><span class="line"><span class="javascript">                        <span class="built_in">this</span>.ctx.moveTo(i, <span class="number">100</span>);</span></span><br><span class="line"><span class="javascript">                        <span class="built_in">this</span>.ctx.lineTo(i, <span class="number">1000</span>);</span></span><br><span class="line"><span class="javascript">                        <span class="built_in">this</span>.ctx.stroke();</span></span><br><span class="line">                    &#125;</span><br><span class="line"><span class="javascript">                    <span class="comment">//清除指定的矩形区域</span></span></span><br><span class="line"><span class="javascript">                    <span class="comment">//this.ctx.clearRect(5, 402,795, 95);</span></span></span><br><span class="line"><span class="javascript">                    <span class="built_in">this</span>.ctx.clearRect(<span class="number">103</span>, <span class="number">502</span>, <span class="number">795</span>, <span class="number">95</span>);</span></span><br><span class="line"><span class="javascript">                    <span class="comment">//斜线</span></span></span><br><span class="line"><span class="javascript">                    <span class="built_in">this</span>.LineDrawing(<span class="number">400</span>, <span class="number">105</span>, <span class="number">600</span>, <span class="number">300</span>);</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">this</span>.LineDrawing(<span class="number">400</span>, <span class="number">805</span>, <span class="number">600</span>, <span class="number">1000</span>);</span></span><br><span class="line"><span class="javascript">                    <span class="comment">//反斜线</span></span></span><br><span class="line"><span class="javascript">                    <span class="built_in">this</span>.LineDrawing(<span class="number">600</span>, <span class="number">105</span>, <span class="number">400</span>, <span class="number">300</span>);</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">this</span>.LineDrawing(<span class="number">600</span>, <span class="number">805</span>, <span class="number">400</span>, <span class="number">1000</span>);</span></span><br><span class="line">                &#125;,</span><br><span class="line"><span class="javascript">                <span class="comment">//坐标的中心点</span></span></span><br><span class="line"><span class="javascript">                center: <span class="function"><span class="keyword">function</span> (<span class="params">x, y</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">this</span>.ctx.lineWidth = <span class="number">5</span>;</span></span><br><span class="line"><span class="javascript">                    <span class="comment">//中心点一（100,200）</span></span></span><br><span class="line"><span class="javascript">                    <span class="comment">//左上</span></span></span><br><span class="line"><span class="javascript">                    <span class="built_in">this</span>.LineDrawing(x - <span class="number">10</span>, y - <span class="number">30</span>, x - <span class="number">10</span>, y - <span class="number">10</span>);</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">this</span>.LineDrawing(x - <span class="number">10</span>, y - <span class="number">10</span>, x - <span class="number">30</span>, y - <span class="number">10</span>);</span></span><br><span class="line"><span class="javascript">                    <span class="comment">//右上</span></span></span><br><span class="line"><span class="javascript">                    <span class="built_in">this</span>.LineDrawing(x + <span class="number">10</span>, y - <span class="number">30</span>, x + <span class="number">10</span>, y - <span class="number">10</span>);</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">this</span>.LineDrawing(x + <span class="number">10</span>, y - <span class="number">10</span>, x + <span class="number">30</span>, y - <span class="number">10</span>);</span></span><br><span class="line"><span class="javascript">                    <span class="comment">//左下</span></span></span><br><span class="line"><span class="javascript">                    <span class="built_in">this</span>.LineDrawing(x - <span class="number">10</span>, y + <span class="number">30</span>, x - <span class="number">10</span>, y + <span class="number">10</span>);</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">this</span>.LineDrawing(x - <span class="number">10</span>, y + <span class="number">10</span>, x - <span class="number">30</span>, y + <span class="number">10</span>);</span></span><br><span class="line"><span class="javascript">                    <span class="comment">//右下</span></span></span><br><span class="line"><span class="javascript">                    <span class="built_in">this</span>.LineDrawing(x + <span class="number">10</span>, y + <span class="number">30</span>, x + <span class="number">10</span>, y + <span class="number">10</span>);</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">this</span>.LineDrawing(x + <span class="number">10</span>, y + <span class="number">10</span>, x + <span class="number">30</span>, y + <span class="number">10</span>);</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">                    <span class="built_in">this</span>.ctx.stroke();</span></span><br><span class="line">                &#125;,</span><br><span class="line"><span class="javascript">                drawFont: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">this</span>.ctx.lineWidth = <span class="number">1</span>;</span></span><br><span class="line"><span class="javascript">                    <span class="comment">//绘制文字</span></span></span><br><span class="line"><span class="javascript">                    <span class="built_in">this</span>.ctx.font = <span class="string">&quot;60px microsoft yahei&quot;</span>;</span></span><br><span class="line"><span class="javascript">                    <span class="comment">// this.ctx.fillStyle = &quot;black&quot;;</span></span></span><br><span class="line"><span class="javascript">                    <span class="built_in">this</span>.ctx.save(); <span class="comment">//保存点</span></span></span><br><span class="line"><span class="javascript">                    <span class="comment">//将坐标中心作为起启点</span></span></span><br><span class="line"><span class="javascript">                    <span class="built_in">this</span>.ctx.translate(canvas1.width / <span class="number">2</span>, canvas1.height / <span class="number">2</span>);</span></span><br><span class="line"><span class="javascript">                    <span class="keyword">var</span> radian = <span class="built_in">Math</span>.PI / <span class="number">2</span>; <span class="comment">// 弧度制 Math.PI=π</span></span></span><br><span class="line"><span class="javascript">                    <span class="built_in">this</span>.ctx.rotate(radian); <span class="comment">// 旋转画布绘制刻度</span></span></span><br><span class="line"><span class="javascript">                    <span class="comment">//填充</span></span></span><br><span class="line"><span class="javascript">                    <span class="built_in">this</span>.ctx.fillText(<span class="string">&quot;汉&quot;</span>, -<span class="number">30</span>, -<span class="number">270</span>);</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">this</span>.ctx.fillText(<span class="string">&quot;界&quot;</span>, -<span class="number">30</span>, -<span class="number">150</span>);</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">this</span>.ctx.restore(); <span class="comment">//恢复到保存点</span></span></span><br><span class="line"><span class="javascript">                    <span class="built_in">this</span>.ctx.save();</span></span><br><span class="line"><span class="javascript">                    <span class="comment">//将坐标中心作为起点</span></span></span><br><span class="line"><span class="javascript">                    <span class="built_in">this</span>.ctx.translate(canvas1.width / <span class="number">2</span>, canvas1.height / <span class="number">2</span>);</span></span><br><span class="line"><span class="javascript">                    <span class="keyword">var</span> radian = <span class="built_in">Math</span>.PI / -<span class="number">2</span>;</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">this</span>.ctx.rotate(radian);</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">this</span>.ctx.fillText(<span class="string">&quot;楚&quot;</span>, -<span class="number">30</span>, -<span class="number">270</span>);</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">this</span>.ctx.fillText(<span class="string">&quot;河&quot;</span>, -<span class="number">30</span>, -<span class="number">150</span>);</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">this</span>.ctx.restore();</span></span><br><span class="line">                &#125;,</span><br><span class="line"><span class="javascript">                <span class="function"><span class="title">drawRed</span>(<span class="params">chessPieceName, _x, _y</span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">this</span>.drawChessPieces(chessPieceName, _x, _y, &#123;</span></span><br><span class="line"><span class="javascript">                        color: <span class="string">&#x27;red&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                        fillColor: <span class="string">&#x27;black&#x27;</span></span></span><br><span class="line">                    &#125;)</span><br><span class="line">                &#125;,</span><br><span class="line"><span class="javascript">                <span class="function"><span class="title">drawBlack</span>(<span class="params">chessPieceName, _x, _y</span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">this</span>.drawChessPieces(chessPieceName, _x, _y, &#123;</span></span><br><span class="line"><span class="javascript">                        color: <span class="string">&#x27;white&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                        fillColor: <span class="string">&#x27;black&#x27;</span></span></span><br><span class="line">                    &#125;)</span><br><span class="line">                &#125;,</span><br><span class="line"><span class="javascript">                <span class="function"><span class="title">showRoad</span>(<span class="params">chessPieceName, _x, _y, x, y</span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">this</span>.drawChessPieces(chessPieceName, _x, _y, &#123;</span></span><br><span class="line"><span class="javascript">                        color: <span class="string">&#x27;blue&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                        fillColor: <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line">                        r: 50</span><br><span class="line">                    &#125;)</span><br><span class="line">                &#125;,</span><br><span class="line"><span class="javascript">                <span class="function"><span class="title">drawChoose</span>(<span class="params">chessMap, roads, chessPieceName, _x, _y, x, y</span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">                    <span class="comment">// this.drawChessPieces(chessPieceName, _x, _y, &#123;</span></span></span><br><span class="line"><span class="javascript">                    <span class="comment">//     color: &#x27;blue&#x27;,</span></span></span><br><span class="line"><span class="javascript">                    <span class="comment">//     fillColor: &#x27;&#x27;,</span></span></span><br><span class="line"><span class="javascript">                    <span class="comment">//     r: 50</span></span></span><br><span class="line"><span class="javascript">                    <span class="comment">// &#125;)</span></span></span><br><span class="line">                    roads.push(&#123;</span><br><span class="line">                        _x, _y, x, y</span><br><span class="line">                    &#125;)</span><br><span class="line">                &#125;,</span><br><span class="line"><span class="javascript">                drawChessPieces: <span class="function"><span class="keyword">function</span> (<span class="params">chessPieceName, _x, _y, config</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                    <span class="keyword">let</span> x = (_x) * <span class="number">100</span> + <span class="number">100</span>;</span></span><br><span class="line"><span class="javascript">                    <span class="keyword">let</span> y = (_y) * <span class="number">100</span> + <span class="number">100</span>;</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">this</span>.ctx.strokeStyle = config.color;</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">this</span>.ctx.lineWidth = <span class="number">5</span>;</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">this</span>.ctx.beginPath();</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">this</span>.ctx.arc(x, y, config.r || <span class="number">40</span>, <span class="number">0</span>, <span class="number">2</span> * <span class="built_in">Math</span>.PI, <span class="literal">true</span>);</span></span><br><span class="line"><span class="javascript">                    <span class="keyword">if</span> (config.fillColor) &#123;</span></span><br><span class="line"><span class="javascript">                        <span class="built_in">this</span>.ctx.fillStyle = config.fillColor;</span></span><br><span class="line"><span class="javascript">                        <span class="built_in">this</span>.ctx.fill();</span></span><br><span class="line">                    &#125;</span><br><span class="line"><span class="javascript">                    <span class="built_in">this</span>.ctx.stroke();</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">this</span>.ctx.font = <span class="string">&quot;60px microsoft yahei&quot;</span>;</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">this</span>.ctx.fillStyle = config.color;</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">this</span>.ctx.fillText(chessPieceName, x - <span class="number">30</span>, y + <span class="number">20</span>);</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;;</span><br><span class="line">            object.init();</span><br><span class="line">        <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>出来的效果</p>
</blockquote>
</li>
</ul>
<p><img src="https://img-blog.csdnimg.cn/20190218214254514.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3E3MjM4OTI2eg==,size_16,color_FFFFFF,t_70#pi500x" alt="defaultPic"></p>
<h2 id="放点棋子在上面呗"><a href="#放点棋子在上面呗" class="headerlink" title="放点棋子在上面呗"></a>放点棋子在上面呗</h2><ul>
<li>参考了网上的多种实现方式后，我写了最适合我自己的生成棋子的方法<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 重置棋盘</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">resetMap</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    chessMap = [</span><br><span class="line">        [<span class="string">&#x27;车红一&#x27;</span>, <span class="string">&#x27;马红一&#x27;</span>, <span class="string">&#x27;相红一&#x27;</span>, <span class="string">&#x27;仕红一&#x27;</span>, <span class="string">&#x27;帅红一&#x27;</span>, <span class="string">&#x27;仕红二&#x27;</span>, <span class="string">&#x27;相红二&#x27;</span>, <span class="string">&#x27;马红二&#x27;</span>, <span class="string">&#x27;车红二&#x27;</span>],</span><br><span class="line">        [<span class="string">&#x27;　　　&#x27;</span>, <span class="string">&#x27;　　　&#x27;</span>, <span class="string">&#x27;　　　&#x27;</span>, <span class="string">&#x27;　　　&#x27;</span>, <span class="string">&#x27;　　　&#x27;</span>, <span class="string">&#x27;　　　&#x27;</span>, <span class="string">&#x27;　　　&#x27;</span>, <span class="string">&#x27;　　　&#x27;</span>, <span class="string">&#x27;　　　&#x27;</span>],</span><br><span class="line">        [<span class="string">&#x27;　　　&#x27;</span>, <span class="string">&#x27;砲红一&#x27;</span>, <span class="string">&#x27;　　　&#x27;</span>, <span class="string">&#x27;　　　&#x27;</span>, <span class="string">&#x27;　　　&#x27;</span>, <span class="string">&#x27;　　　&#x27;</span>, <span class="string">&#x27;　　　&#x27;</span>, <span class="string">&#x27;砲红二&#x27;</span>, <span class="string">&#x27;　　　&#x27;</span>],</span><br><span class="line">        [<span class="string">&#x27;兵红一&#x27;</span>, <span class="string">&#x27;　　　&#x27;</span>, <span class="string">&#x27;兵红二&#x27;</span>, <span class="string">&#x27;　　　&#x27;</span>, <span class="string">&#x27;兵红三&#x27;</span>, <span class="string">&#x27;　　　&#x27;</span>, <span class="string">&#x27;兵红四&#x27;</span>, <span class="string">&#x27;　　　&#x27;</span>, <span class="string">&#x27;兵红五&#x27;</span>],</span><br><span class="line">        [<span class="string">&#x27;　　　&#x27;</span>, <span class="string">&#x27;　　　&#x27;</span>, <span class="string">&#x27;　　　&#x27;</span>, <span class="string">&#x27;　　　&#x27;</span>, <span class="string">&#x27;　　　&#x27;</span>, <span class="string">&#x27;　　　&#x27;</span>, <span class="string">&#x27;　　　&#x27;</span>, <span class="string">&#x27;　　　&#x27;</span>, <span class="string">&#x27;　　　&#x27;</span>],</span><br><span class="line">        [<span class="string">&#x27;　　　&#x27;</span>, <span class="string">&#x27;　　　&#x27;</span>, <span class="string">&#x27;　　　&#x27;</span>, <span class="string">&#x27;　　　&#x27;</span>, <span class="string">&#x27;　　　&#x27;</span>, <span class="string">&#x27;　　　&#x27;</span>, <span class="string">&#x27;　　　&#x27;</span>, <span class="string">&#x27;　　　&#x27;</span>, <span class="string">&#x27;　　　&#x27;</span>],</span><br><span class="line">        [<span class="string">&#x27;卒黑一&#x27;</span>, <span class="string">&#x27;　　　&#x27;</span>, <span class="string">&#x27;卒黑二&#x27;</span>, <span class="string">&#x27;　　　&#x27;</span>, <span class="string">&#x27;卒黑三&#x27;</span>, <span class="string">&#x27;　　　&#x27;</span>, <span class="string">&#x27;卒黑四&#x27;</span>, <span class="string">&#x27;　　　&#x27;</span>, <span class="string">&#x27;卒黑五&#x27;</span>],</span><br><span class="line">        [<span class="string">&#x27;　　　&#x27;</span>, <span class="string">&#x27;炮黑一&#x27;</span>, <span class="string">&#x27;　　　&#x27;</span>, <span class="string">&#x27;　　　&#x27;</span>, <span class="string">&#x27;　　　&#x27;</span>, <span class="string">&#x27;　　　&#x27;</span>, <span class="string">&#x27;　　　&#x27;</span>, <span class="string">&#x27;炮黑二&#x27;</span>, <span class="string">&#x27;　　　&#x27;</span>],</span><br><span class="line">        [<span class="string">&#x27;　　　&#x27;</span>, <span class="string">&#x27;　　　&#x27;</span>, <span class="string">&#x27;　　　&#x27;</span>, <span class="string">&#x27;　　　&#x27;</span>, <span class="string">&#x27;　　　&#x27;</span>, <span class="string">&#x27;　　　&#x27;</span>, <span class="string">&#x27;　　　&#x27;</span>, <span class="string">&#x27;　　　&#x27;</span>, <span class="string">&#x27;　　　&#x27;</span>],</span><br><span class="line">        [<span class="string">&#x27;车黑一&#x27;</span>, <span class="string">&#x27;马黑一&#x27;</span>, <span class="string">&#x27;象黑一&#x27;</span>, <span class="string">&#x27;士黑一&#x27;</span>, <span class="string">&#x27;将黑一&#x27;</span>, <span class="string">&#x27;士黑二&#x27;</span>, <span class="string">&#x27;象黑二&#x27;</span>, <span class="string">&#x27;马黑二&#x27;</span>, <span class="string">&#x27;车黑二&#x27;</span>]</span><br><span class="line">    ]</span><br><span class="line">    side = <span class="string">&#x27;红&#x27;</span>;</span><br><span class="line">    flushChessCanvas();</span><br><span class="line">&#125;</span><br><span class="line">resetMap();</span><br><span class="line"><span class="comment">// 画出棋子</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">flushChessCanvas</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    object.init();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> y = <span class="number">0</span>; y &lt; chessMap.length; y++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> x = <span class="number">0</span>; x &lt; chessMap[y].length; x++) &#123;</span><br><span class="line">            <span class="keyword">let</span> chess = chessMap[y][x];</span><br><span class="line">            <span class="keyword">if</span> (chess[<span class="number">1</span>] == <span class="string">&#x27;红&#x27;</span>) &#123;</span><br><span class="line">                object.drawRed(chess[<span class="number">0</span>], x, y)</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (chess[<span class="number">1</span>] == <span class="string">&#x27;黑&#x27;</span>) &#123;</span><br><span class="line">                object.drawBlack(chess[<span class="number">0</span>], x, y)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>目前就大致实现了文章开头的棋盘的效果，至此，我们可以看到一副配备完整的<code>象棋+棋盘</code>了（可以拿来卖了(￣▽￣)”）</p>
</blockquote>
<h2 id="所以，怎么能少了规则呢？"><a href="#所以，怎么能少了规则呢？" class="headerlink" title="所以，怎么能少了规则呢？"></a>所以，怎么能少了规则呢？</h2></li>
<li>这里直接上代码了，我按<a href="https://me.csdn.net/u012723995"><code>超逸_流</code></a>的方法，自己实现了一边棋盘的主逻辑，主要来判断每一颗棋子可以行走的路径<h3 id="车逻辑"><a href="#车逻辑" class="headerlink" title="车逻辑"></a>车逻辑</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 车逻辑</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getJuRoad</span>(<span class="params">map, roads, x, y</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> chessMap = map;</span><br><span class="line">    <span class="keyword">let</span> chess = chessMap[y][x];</span><br><span class="line">    <span class="comment">// 上</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> _y = y - <span class="number">1</span>, _x = x; _y &gt; -<span class="number">1</span>; _y--) &#123;</span><br><span class="line">        <span class="keyword">if</span> (chessMap[_y][_x] === <span class="string">&#x27;　　　&#x27;</span>) &#123;</span><br><span class="line">            object.drawChoose(chessMap, roads, chess[<span class="number">0</span>], _x, _y, x, y)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 同色子</span></span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (chessMap[_y][_x][<span class="number">1</span>] === chess[<span class="number">1</span>]) &#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 异色子</span></span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (chessMap[_y][_x][<span class="number">1</span>] !== chess[<span class="number">1</span>]) &#123;</span><br><span class="line">            object.drawChoose(chessMap, roads, chess[<span class="number">0</span>], _x, _y, x, y)</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 右</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> _y = y, _x = x + <span class="number">1</span>; _x &lt; <span class="number">9</span>; _x++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (chessMap[_y][_x] === <span class="string">&#x27;　　　&#x27;</span>) &#123;</span><br><span class="line">            object.drawChoose(chessMap, roads, chess[<span class="number">0</span>], _x, _y, x, y)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 同色子</span></span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (chessMap[_y][_x][<span class="number">1</span>] === chess[<span class="number">1</span>]) &#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 异色子</span></span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (chessMap[_y][_x][<span class="number">1</span>] !== chess[<span class="number">1</span>]) &#123;</span><br><span class="line">            object.drawChoose(chessMap, roads, chess[<span class="number">0</span>], _x, _y, x, y)</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 下</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> _y = y + <span class="number">1</span>, _x = x; _y &lt; <span class="number">10</span>; _y++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (chessMap[_y][_x] === <span class="string">&#x27;　　　&#x27;</span>) &#123;</span><br><span class="line">            object.drawChoose(chessMap, roads, chess[<span class="number">0</span>], _x, _y, x, y)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 同色子</span></span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (chessMap[_y][_x][<span class="number">1</span>] === chess[<span class="number">1</span>]) &#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 异色子</span></span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (chessMap[_y][_x][<span class="number">1</span>] !== chess[<span class="number">1</span>]) &#123;</span><br><span class="line">            object.drawChoose(chessMap, roads, chess[<span class="number">0</span>], _x, _y, x, y)</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 左</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> _y = y, _x = x - <span class="number">1</span>; _x &gt; -<span class="number">1</span>; _x--) &#123;</span><br><span class="line">        <span class="keyword">if</span> (chessMap[_y][_x] === <span class="string">&#x27;　　　&#x27;</span>) &#123;</span><br><span class="line">            object.drawChoose(chessMap, roads, chess[<span class="number">0</span>], _x, _y, x, y)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 同色子</span></span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (chessMap[_y][_x][<span class="number">1</span>] === chess[<span class="number">1</span>]) &#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 异色子</span></span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (chessMap[_y][_x][<span class="number">1</span>] !== chess[<span class="number">1</span>]) &#123;</span><br><span class="line">            object.drawChoose(chessMap, roads, chess[<span class="number">0</span>], _x, _y, x, y)</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// getJuRoad(0,0)</span></span><br></pre></td></tr></table></figure>
<h3 id="马逻辑"><a href="#马逻辑" class="headerlink" title="马逻辑"></a>马逻辑</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 马逻辑</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getMaRoad</span>(<span class="params">map, roads, x, y</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> chessMap = map;</span><br><span class="line">    <span class="keyword">let</span> chess = chessMap[y][x];</span><br><span class="line">    <span class="comment">// 1点钟方向</span></span><br><span class="line">    <span class="keyword">if</span> (x + <span class="number">1</span> &lt; <span class="number">9</span> &amp;&amp; y - <span class="number">2</span> &gt; -<span class="number">1</span> &amp;&amp; chessMap[y - <span class="number">1</span>][x] === <span class="string">&#x27;　　　&#x27;</span> &amp;&amp; chessMap[y - <span class="number">2</span>][x + <span class="number">1</span>][<span class="number">1</span>] != chess[<span class="number">1</span>]) &#123;</span><br><span class="line">        object.drawChoose(chessMap, roads, chess[<span class="number">0</span>], x + <span class="number">1</span>, y - <span class="number">2</span>, x, y)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 2点钟方向</span></span><br><span class="line">    <span class="keyword">if</span> (x + <span class="number">2</span> &lt; <span class="number">9</span> &amp;&amp; y - <span class="number">1</span> &gt; -<span class="number">1</span> &amp;&amp; chessMap[y][x + <span class="number">1</span>] === <span class="string">&#x27;　　　&#x27;</span> &amp;&amp; chessMap[y - <span class="number">1</span>][x + <span class="number">2</span>][<span class="number">1</span>] != chess[<span class="number">1</span>]) &#123;</span><br><span class="line">        object.drawChoose(chessMap, roads, chess[<span class="number">0</span>], x + <span class="number">2</span>, y - <span class="number">1</span>, x, y)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 4点钟方向</span></span><br><span class="line">    <span class="keyword">if</span> (x + <span class="number">2</span> &lt; <span class="number">9</span> &amp;&amp; y + <span class="number">1</span> &lt; <span class="number">10</span> &amp;&amp; chessMap[y][x + <span class="number">1</span>] === <span class="string">&#x27;　　　&#x27;</span> &amp;&amp; chessMap[y + <span class="number">1</span>][x + <span class="number">2</span>][<span class="number">1</span>] != chess[<span class="number">1</span>]) &#123;</span><br><span class="line">        object.drawChoose(chessMap, roads, chess[<span class="number">0</span>], x + <span class="number">2</span>, y + <span class="number">1</span>, x, y)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 5点钟方向</span></span><br><span class="line">    <span class="keyword">if</span> (x + <span class="number">1</span> &lt; <span class="number">9</span> &amp;&amp; y + <span class="number">2</span> &lt; <span class="number">10</span> &amp;&amp; chessMap[y + <span class="number">1</span>][x] === <span class="string">&#x27;　　　&#x27;</span> &amp;&amp; chessMap[y + <span class="number">2</span>][x + <span class="number">1</span>][<span class="number">1</span>] != chess[<span class="number">1</span>]) &#123;</span><br><span class="line">        object.drawChoose(chessMap, roads, chess[<span class="number">0</span>], x + <span class="number">1</span>, y + <span class="number">2</span>, x, y)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 7点钟方向</span></span><br><span class="line">    <span class="keyword">if</span> (x - <span class="number">1</span> &gt; -<span class="number">1</span> &amp;&amp; y + <span class="number">2</span> &lt; <span class="number">10</span> &amp;&amp; chessMap[y + <span class="number">1</span>][x] === <span class="string">&#x27;　　　&#x27;</span> &amp;&amp; chessMap[y + <span class="number">2</span>][x - <span class="number">1</span>][<span class="number">1</span>] != chess[<span class="number">1</span>]) &#123;</span><br><span class="line">        object.drawChoose(chessMap, roads, chess[<span class="number">0</span>], x - <span class="number">1</span>, y + <span class="number">2</span>, x, y)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 8点钟方向</span></span><br><span class="line">    <span class="keyword">if</span> (x - <span class="number">2</span> &gt; -<span class="number">1</span> &amp;&amp; y + <span class="number">1</span> &lt; <span class="number">10</span> &amp;&amp; chessMap[y][x - <span class="number">1</span>] === <span class="string">&#x27;　　　&#x27;</span> &amp;&amp; chessMap[y + <span class="number">1</span>][x - <span class="number">2</span>][<span class="number">1</span>] != chess[<span class="number">1</span>]) &#123;</span><br><span class="line">        object.drawChoose(chessMap, roads, chess[<span class="number">0</span>], x - <span class="number">2</span>, y + <span class="number">1</span>, x, y)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 10点钟方向</span></span><br><span class="line">    <span class="keyword">if</span> (x - <span class="number">2</span> &gt; -<span class="number">1</span> &amp;&amp; y - <span class="number">1</span> &gt; -<span class="number">1</span> &amp;&amp; chessMap[y][x - <span class="number">1</span>] === <span class="string">&#x27;　　　&#x27;</span> &amp;&amp; chessMap[y - <span class="number">1</span>][x - <span class="number">2</span>][<span class="number">1</span>] != chess[<span class="number">1</span>]) &#123;</span><br><span class="line">        object.drawChoose(chessMap, roads, chess[<span class="number">0</span>], x - <span class="number">2</span>, y - <span class="number">1</span>, x, y)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 11点钟方向</span></span><br><span class="line">    <span class="keyword">if</span> (x - <span class="number">1</span> &gt; -<span class="number">1</span> &amp;&amp; y - <span class="number">2</span> &gt; -<span class="number">1</span> &amp;&amp; chessMap[y - <span class="number">1</span>][x] === <span class="string">&#x27;　　　&#x27;</span> &amp;&amp; chessMap[y - <span class="number">2</span>][x - <span class="number">1</span>][<span class="number">1</span>] != chess[<span class="number">1</span>]) &#123;</span><br><span class="line">        object.drawChoose(chessMap, roads, chess[<span class="number">0</span>], x - <span class="number">1</span>, y - <span class="number">2</span>, x, y)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// getMaRoad(1,0)</span></span><br></pre></td></tr></table></figure>
<h3 id="象逻辑"><a href="#象逻辑" class="headerlink" title="象逻辑"></a>象逻辑</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 象逻辑</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getXiangRoad</span>(<span class="params">map, roads, x, y, side</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> chessMap = map;</span><br><span class="line">    <span class="keyword">let</span> chess = chessMap[y][x];</span><br><span class="line">    <span class="comment">// 1点半方向</span></span><br><span class="line">    <span class="keyword">if</span> (y - <span class="number">2</span> &gt; -<span class="number">1</span> &amp;&amp; x + <span class="number">2</span> &lt; <span class="number">9</span> &amp;&amp; chessMap[y - <span class="number">1</span>][x + <span class="number">1</span>] === <span class="string">&#x27;　　　&#x27;</span> &amp;&amp; chessMap[y - <span class="number">2</span>][x + <span class="number">2</span>][<span class="number">1</span>] != chess[<span class="number">1</span>]) &#123;</span><br><span class="line">        <span class="keyword">if</span> (side == <span class="string">&#x27;黑&#x27;</span> &amp;&amp; (y - <span class="number">2</span>) &gt; <span class="number">4</span>) &#123;</span><br><span class="line">            object.drawChoose(chessMap, roads, chess[<span class="number">0</span>], x + <span class="number">2</span>, y - <span class="number">2</span>, x, y)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (side == <span class="string">&#x27;红&#x27;</span> &amp;&amp; (y - <span class="number">2</span>) &lt; <span class="number">5</span>) &#123;</span><br><span class="line">            object.drawChoose(chessMap, roads, chess[<span class="number">0</span>], x + <span class="number">2</span>, y - <span class="number">2</span>, x, y)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 4点半方向</span></span><br><span class="line">    <span class="keyword">if</span> (y + <span class="number">2</span> &lt; <span class="number">10</span> &amp;&amp; x + <span class="number">2</span> &lt; <span class="number">9</span> &amp;&amp; chessMap[y + <span class="number">1</span>][x + <span class="number">1</span>] === <span class="string">&#x27;　　　&#x27;</span> &amp;&amp; chessMap[y + <span class="number">2</span>][x + <span class="number">2</span>][<span class="number">1</span>] != chess[<span class="number">1</span>]) &#123;</span><br><span class="line">        <span class="keyword">if</span> (side == <span class="string">&#x27;黑&#x27;</span> &amp;&amp; (y + <span class="number">2</span>) &gt; <span class="number">4</span>) &#123;</span><br><span class="line">            object.drawChoose(chessMap, roads, chess[<span class="number">0</span>], x + <span class="number">2</span>, y + <span class="number">2</span>, x, y)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (side == <span class="string">&#x27;红&#x27;</span> &amp;&amp; (y + <span class="number">2</span>) &lt; <span class="number">5</span>) &#123;</span><br><span class="line">            object.drawChoose(chessMap, roads, chess[<span class="number">0</span>], x + <span class="number">2</span>, y + <span class="number">2</span>, x, y)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 7点半方向</span></span><br><span class="line">    <span class="keyword">if</span> (y + <span class="number">2</span> &lt; <span class="number">10</span> &amp;&amp; x - <span class="number">2</span> &gt; -<span class="number">1</span> &amp;&amp; chessMap[y + <span class="number">1</span>][x - <span class="number">1</span>] === <span class="string">&#x27;　　　&#x27;</span> &amp;&amp; chessMap[y + <span class="number">2</span>][x - <span class="number">2</span>][<span class="number">1</span>] != chess[<span class="number">1</span>]) &#123;</span><br><span class="line">        <span class="keyword">if</span> (side == <span class="string">&#x27;黑&#x27;</span> &amp;&amp; (y + <span class="number">2</span>) &gt; <span class="number">4</span>) &#123;</span><br><span class="line">            object.drawChoose(chessMap, roads, chess[<span class="number">0</span>], x - <span class="number">2</span>, y + <span class="number">2</span>, x, y)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (side == <span class="string">&#x27;红&#x27;</span> &amp;&amp; (y + <span class="number">2</span>) &lt; <span class="number">5</span>) &#123;</span><br><span class="line">            object.drawChoose(chessMap, roads, chess[<span class="number">0</span>], x - <span class="number">2</span>, y + <span class="number">2</span>, x, y)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 10点半方向</span></span><br><span class="line">    <span class="keyword">if</span> (y - <span class="number">2</span> &gt; -<span class="number">1</span> &amp;&amp; x - <span class="number">2</span> &gt; -<span class="number">1</span> &amp;&amp; chessMap[y - <span class="number">1</span>][x - <span class="number">1</span>] === <span class="string">&#x27;　　　&#x27;</span> &amp;&amp; chessMap[y - <span class="number">2</span>][x - <span class="number">2</span>][<span class="number">1</span>] != chess[<span class="number">1</span>]) &#123;</span><br><span class="line">        <span class="keyword">if</span> (side == <span class="string">&#x27;黑&#x27;</span> &amp;&amp; (y - <span class="number">2</span>) &gt; <span class="number">4</span>) &#123;</span><br><span class="line">            object.drawChoose(chessMap, roads, chess[<span class="number">0</span>], x - <span class="number">2</span>, y - <span class="number">2</span>, x, y)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (side == <span class="string">&#x27;红&#x27;</span> &amp;&amp; (y - <span class="number">2</span>) &lt; <span class="number">5</span>) &#123;</span><br><span class="line">            object.drawChoose(chessMap, roads, chess[<span class="number">0</span>], x - <span class="number">2</span>, y - <span class="number">2</span>, x, y)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// getXiangRoad(2,0,&#x27;红&#x27;)</span></span><br></pre></td></tr></table></figure>
<h3 id="士逻辑"><a href="#士逻辑" class="headerlink" title="士逻辑"></a>士逻辑</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 士逻辑</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getShiRoad</span>(<span class="params">map, roads, x, y, side</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> chessMap = map;</span><br><span class="line">    <span class="keyword">let</span> chess = chessMap[y][x];</span><br><span class="line">    <span class="comment">// 1点半方向</span></span><br><span class="line">    <span class="keyword">if</span> (y - <span class="number">1</span> &gt; -<span class="number">1</span> &amp;&amp; x + <span class="number">1</span> &lt; <span class="number">9</span> &amp;&amp; chessMap[y - <span class="number">1</span>][x + <span class="number">1</span>][<span class="number">1</span>] != chess[<span class="number">1</span>]) &#123;</span><br><span class="line">        <span class="keyword">if</span> (side == <span class="string">&#x27;黑&#x27;</span> &amp;&amp; (y - <span class="number">1</span>) &gt; <span class="number">6</span> &amp;&amp; (x + <span class="number">1</span>) &gt; <span class="number">2</span> &amp;&amp; (x + <span class="number">1</span>) &lt; <span class="number">6</span>) &#123;</span><br><span class="line">            object.drawChoose(chessMap, roads, chess[<span class="number">0</span>], x + <span class="number">1</span>, y - <span class="number">1</span>, x, y)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (side == <span class="string">&#x27;红&#x27;</span> &amp;&amp; (y - <span class="number">1</span>) &lt; <span class="number">3</span> &amp;&amp; (x + <span class="number">1</span>) &gt; <span class="number">2</span> &amp;&amp; (x + <span class="number">1</span>) &lt; <span class="number">6</span>) &#123;</span><br><span class="line">            object.drawChoose(chessMap, roads, chess[<span class="number">0</span>], x + <span class="number">1</span>, y - <span class="number">1</span>, x, y)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 4点半方向</span></span><br><span class="line">    <span class="keyword">if</span> (y + <span class="number">1</span> &lt; <span class="number">10</span> &amp;&amp; x + <span class="number">1</span> &lt; <span class="number">9</span> &amp;&amp; chessMap[y + <span class="number">1</span>][x + <span class="number">1</span>][<span class="number">1</span>] != chess[<span class="number">1</span>]) &#123;</span><br><span class="line">        <span class="keyword">if</span> (side == <span class="string">&#x27;黑&#x27;</span> &amp;&amp; (y + <span class="number">1</span>) &gt; <span class="number">6</span> &amp;&amp; (x + <span class="number">1</span>) &gt; <span class="number">2</span> &amp;&amp; (x + <span class="number">1</span>) &lt; <span class="number">6</span>) &#123;</span><br><span class="line">            object.drawChoose(chessMap, roads, chess[<span class="number">0</span>], x + <span class="number">1</span>, y + <span class="number">1</span>, x, y)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (side == <span class="string">&#x27;红&#x27;</span> &amp;&amp; (y + <span class="number">1</span>) &lt; <span class="number">3</span> &amp;&amp; (x + <span class="number">1</span>) &gt; <span class="number">2</span> &amp;&amp; (x + <span class="number">1</span>) &lt; <span class="number">6</span>) &#123;</span><br><span class="line">            object.drawChoose(chessMap, roads, chess[<span class="number">0</span>], x + <span class="number">1</span>, y + <span class="number">1</span>, x, y)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 7点半方向</span></span><br><span class="line">    <span class="keyword">if</span> (y + <span class="number">1</span> &lt; <span class="number">10</span> &amp;&amp; x - <span class="number">1</span> &gt; -<span class="number">1</span> &amp;&amp; chessMap[y + <span class="number">1</span>][x - <span class="number">1</span>][<span class="number">1</span>] != chess[<span class="number">1</span>]) &#123;</span><br><span class="line">        <span class="keyword">if</span> (side == <span class="string">&#x27;黑&#x27;</span> &amp;&amp; (y + <span class="number">1</span>) &gt; <span class="number">6</span> &amp;&amp; (x - <span class="number">1</span>) &gt; <span class="number">2</span> &amp;&amp; (x - <span class="number">1</span>) &lt; <span class="number">6</span>) &#123;</span><br><span class="line">            object.drawChoose(chessMap, roads, chess[<span class="number">0</span>], x - <span class="number">1</span>, y + <span class="number">1</span>, x, y)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (side == <span class="string">&#x27;红&#x27;</span> &amp;&amp; (y + <span class="number">1</span>) &lt; <span class="number">3</span> &amp;&amp; (x - <span class="number">1</span>) &gt; <span class="number">2</span> &amp;&amp; (x - <span class="number">1</span>) &lt; <span class="number">6</span>) &#123;</span><br><span class="line">            object.drawChoose(chessMap, roads, chess[<span class="number">0</span>], x - <span class="number">1</span>, y + <span class="number">1</span>, x, y)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 10点半方向</span></span><br><span class="line">    <span class="keyword">if</span> (y - <span class="number">1</span> &gt; -<span class="number">1</span> &amp;&amp; x - <span class="number">1</span> &gt; -<span class="number">1</span> &amp;&amp; chessMap[y - <span class="number">1</span>][x - <span class="number">1</span>][<span class="number">1</span>] != chess[<span class="number">1</span>]) &#123;</span><br><span class="line">        <span class="keyword">if</span> (side == <span class="string">&#x27;黑&#x27;</span> &amp;&amp; (y - <span class="number">1</span>) &gt; <span class="number">6</span> &amp;&amp; (x - <span class="number">1</span>) &gt; <span class="number">2</span> &amp;&amp; (x - <span class="number">1</span>) &lt; <span class="number">6</span>) &#123;</span><br><span class="line">            object.drawChoose(chessMap, roads, chess[<span class="number">0</span>], x - <span class="number">1</span>, y - <span class="number">1</span>, x, y)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (side == <span class="string">&#x27;红&#x27;</span> &amp;&amp; (y - <span class="number">1</span>) &lt; <span class="number">3</span> &amp;&amp; (x - <span class="number">1</span>) &gt; <span class="number">2</span> &amp;&amp; (x - <span class="number">1</span>) &lt; <span class="number">6</span>) &#123;</span><br><span class="line">            object.drawChoose(chessMap, roads, chess[<span class="number">0</span>], x - <span class="number">1</span>, y - <span class="number">1</span>, x, y)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// getShiRoad(3,0,&#x27;红&#x27;)</span></span><br></pre></td></tr></table></figure>
<h3 id="将逻辑"><a href="#将逻辑" class="headerlink" title="将逻辑"></a>将逻辑</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 将逻辑</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getJiangRoad</span>(<span class="params">map, roads, x, y, side</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> chessMap = map;</span><br><span class="line">    <span class="keyword">let</span> chess = chessMap[y][x];</span><br><span class="line">    <span class="comment">// 对阵</span></span><br><span class="line">    <span class="keyword">if</span> (side == <span class="string">&#x27;黑&#x27;</span>) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> _y = y-<span class="number">1</span>;_y &gt; -<span class="number">1</span>; _y--) &#123;</span><br><span class="line">            <span class="keyword">if</span> (chessMap[_y][x][<span class="number">0</span>] === <span class="string">&#x27;帅&#x27;</span>) &#123;</span><br><span class="line">                object.drawChoose(chessMap, roads, chess[<span class="number">0</span>], x, _y, x, y)</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (chessMap[_y][x] !== <span class="string">&#x27;　　　&#x27;</span>) &#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (side == <span class="string">&#x27;红&#x27;</span>) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> _y = y+<span class="number">1</span>;_y &lt; <span class="number">10</span>; _y++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (chessMap[_y][x][<span class="number">0</span>] === <span class="string">&#x27;将&#x27;</span>) &#123;</span><br><span class="line">                object.drawChoose(chessMap, roads, chess[<span class="number">0</span>], x, _y, x, y)</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (chessMap[_y][x] !== <span class="string">&#x27;　　　&#x27;</span>) &#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 上</span></span><br><span class="line">    <span class="keyword">if</span> (y - <span class="number">1</span> &gt; -<span class="number">1</span> &amp;&amp; chessMap[y - <span class="number">1</span>][x][<span class="number">1</span>] != chess[<span class="number">1</span>]) &#123;</span><br><span class="line">        <span class="keyword">if</span> (side == <span class="string">&#x27;黑&#x27;</span> &amp;&amp; (y - <span class="number">1</span>) &gt; <span class="number">6</span>) &#123;</span><br><span class="line">            object.drawChoose(chessMap, roads, chess[<span class="number">0</span>], x, y - <span class="number">1</span>, x, y)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (side == <span class="string">&#x27;红&#x27;</span>) &#123;</span><br><span class="line">            object.drawChoose(chessMap, roads, chess[<span class="number">0</span>], x, y - <span class="number">1</span>, x, y)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 右</span></span><br><span class="line">    <span class="keyword">if</span> (x + <span class="number">1</span> &lt; <span class="number">6</span> &amp;&amp; chessMap[y][x + <span class="number">1</span>][<span class="number">1</span>] != chess[<span class="number">1</span>]) &#123;</span><br><span class="line">        object.drawChoose(chessMap, roads, chess[<span class="number">0</span>], x + <span class="number">1</span>, y, x, y)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 下</span></span><br><span class="line">    <span class="keyword">if</span> (y + <span class="number">1</span> &lt; <span class="number">10</span> &amp;&amp; chessMap[y + <span class="number">1</span>][x][<span class="number">1</span>] != chess[<span class="number">1</span>]) &#123;</span><br><span class="line">        <span class="keyword">if</span> (side == <span class="string">&#x27;黑&#x27;</span>) &#123;</span><br><span class="line">            object.drawChoose(chessMap, roads, chess[<span class="number">0</span>], x, y + <span class="number">1</span>, x, y)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (side == <span class="string">&#x27;红&#x27;</span> &amp;&amp; (y + <span class="number">1</span>) &lt; <span class="number">3</span>) &#123;</span><br><span class="line">            object.drawChoose(chessMap, roads, chess[<span class="number">0</span>], x, y + <span class="number">1</span>, x, y)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 左</span></span><br><span class="line">    <span class="keyword">if</span> (x - <span class="number">1</span> &gt; <span class="number">2</span> &amp;&amp; chessMap[y][x - <span class="number">1</span>][<span class="number">1</span>] != chess[<span class="number">1</span>]) &#123;</span><br><span class="line">        object.drawChoose(chessMap, roads, chess[<span class="number">0</span>], x - <span class="number">1</span>, y, x, y)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// getJiangRoad(4,0,&#x27;红&#x27;)</span></span><br></pre></td></tr></table></figure>
<h3 id="炮逻辑"><a href="#炮逻辑" class="headerlink" title="炮逻辑"></a>炮逻辑</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 炮逻辑</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getPaoRoad</span>(<span class="params">map, roads, x, y</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> chessMap = map;</span><br><span class="line">    <span class="keyword">let</span> chess = chessMap[y][x];</span><br><span class="line">    <span class="keyword">let</span> count = <span class="number">0</span>;</span><br><span class="line">    <span class="comment">// 上</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> _y = y - <span class="number">1</span>, _x = x; _y &gt; -<span class="number">1</span>; _y--) &#123;</span><br><span class="line">        <span class="keyword">if</span> (count == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (chessMap[_y][_x] === <span class="string">&#x27;　　　&#x27;</span>) &#123;</span><br><span class="line">                object.drawChoose(chessMap, roads, chess[<span class="number">0</span>], _x, _y, x, y)</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                count++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// 空白</span></span><br><span class="line">            <span class="keyword">if</span> (chessMap[_y][_x] === <span class="string">&#x27;　　　&#x27;</span>) &#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 同色子</span></span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (chessMap[_y][_x][<span class="number">1</span>] === chess[<span class="number">1</span>]) &#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 异色子</span></span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (chessMap[_y][_x][<span class="number">1</span>] !== chess[<span class="number">1</span>]) &#123;</span><br><span class="line">                object.drawChoose(chessMap, roads, chess[<span class="number">0</span>], _x, _y, x, y)</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    count = <span class="number">0</span>;</span><br><span class="line">    <span class="comment">// 右</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> _y = y, _x = x + <span class="number">1</span>; _x &lt; <span class="number">9</span>; _x++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (count == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (chessMap[_y][_x] === <span class="string">&#x27;　　　&#x27;</span>) &#123;</span><br><span class="line">                object.drawChoose(chessMap, roads, chess[<span class="number">0</span>], _x, _y, x, y)</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                count++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// 空白</span></span><br><span class="line">            <span class="keyword">if</span> (chessMap[_y][_x] === <span class="string">&#x27;　　　&#x27;</span>) &#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 同色子</span></span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (chessMap[_y][_x][<span class="number">1</span>] === chess[<span class="number">1</span>]) &#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 异色子</span></span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (chessMap[_y][_x][<span class="number">1</span>] !== chess[<span class="number">1</span>]) &#123;</span><br><span class="line">                object.drawChoose(chessMap, roads, chess[<span class="number">0</span>], _x, _y, x, y)</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    count = <span class="number">0</span>;</span><br><span class="line">    <span class="comment">// 下</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> _y = y + <span class="number">1</span>, _x = x; _y &lt; <span class="number">10</span>; _y++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (count == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (chessMap[_y][_x] === <span class="string">&#x27;　　　&#x27;</span>) &#123;</span><br><span class="line">                object.drawChoose(chessMap, roads, chess[<span class="number">0</span>], _x, _y, x, y)</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                count++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// 空白</span></span><br><span class="line">            <span class="keyword">if</span> (chessMap[_y][_x] === <span class="string">&#x27;　　　&#x27;</span>) &#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 同色子</span></span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (chessMap[_y][_x][<span class="number">1</span>] === chess[<span class="number">1</span>]) &#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 异色子</span></span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (chessMap[_y][_x][<span class="number">1</span>] !== chess[<span class="number">1</span>]) &#123;</span><br><span class="line">                object.drawChoose(chessMap, roads, chess[<span class="number">0</span>], _x, _y, x, y)</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    count = <span class="number">0</span>;</span><br><span class="line">    <span class="comment">// 左</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> _y = y, _x = x - <span class="number">1</span>; _x &gt; -<span class="number">1</span>; _x--) &#123;</span><br><span class="line">        <span class="keyword">if</span> (count == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (chessMap[_y][_x] === <span class="string">&#x27;　　　&#x27;</span>) &#123;</span><br><span class="line">                object.drawChoose(chessMap, roads, chess[<span class="number">0</span>], _x, _y, x, y)</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                count++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// 空白</span></span><br><span class="line">            <span class="keyword">if</span> (chessMap[_y][_x] === <span class="string">&#x27;　　　&#x27;</span>) &#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 同色子</span></span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (chessMap[_y][_x][<span class="number">1</span>] === chess[<span class="number">1</span>]) &#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 异色子</span></span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (chessMap[_y][_x][<span class="number">1</span>] !== chess[<span class="number">1</span>]) &#123;</span><br><span class="line">                object.drawChoose(chessMap, roads, chess[<span class="number">0</span>], _x, _y, x, y)</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// getPaoRoad(1, 2)</span></span><br></pre></td></tr></table></figure>
<h3 id="卒逻辑"><a href="#卒逻辑" class="headerlink" title="卒逻辑"></a>卒逻辑</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 卒逻辑</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getZuRoad</span>(<span class="params">map, roads, x, y, side</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> chessMap = map;</span><br><span class="line">    <span class="keyword">let</span> chess = chessMap[y][x];</span><br><span class="line">    <span class="comment">// 上</span></span><br><span class="line">    <span class="keyword">if</span> (side == <span class="string">&#x27;黑&#x27;</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (y-<span class="number">1</span>&gt;-<span class="number">1</span> &amp;&amp; chessMap[y-<span class="number">1</span>][x][<span class="number">1</span>] != <span class="string">&#x27;黑&#x27;</span>) &#123;</span><br><span class="line">            object.drawChoose(chessMap, roads, chess[<span class="number">0</span>], x, y-<span class="number">1</span>, x, y);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 右</span></span><br><span class="line">    <span class="keyword">if</span> (side == <span class="string">&#x27;黑&#x27;</span> &amp;&amp; y &lt; <span class="number">5</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (x+<span class="number">1</span>&lt;<span class="number">9</span> &amp;&amp; chessMap[y][x+<span class="number">1</span>][<span class="number">1</span>] != <span class="string">&#x27;黑&#x27;</span>) &#123;</span><br><span class="line">            object.drawChoose(chessMap, roads, chess[<span class="number">0</span>], x+<span class="number">1</span>, y, x, y);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (side == <span class="string">&#x27;红&#x27;</span> &amp;&amp; y &gt; <span class="number">4</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (x+<span class="number">1</span>&lt;<span class="number">9</span> &amp;&amp; chessMap[y][x+<span class="number">1</span>][<span class="number">1</span>] != <span class="string">&#x27;红&#x27;</span>) &#123;</span><br><span class="line">            object.drawChoose(chessMap, roads, chess[<span class="number">0</span>], x+<span class="number">1</span>, y, x, y);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 下</span></span><br><span class="line">    <span class="keyword">if</span> (side == <span class="string">&#x27;红&#x27;</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (y+<span class="number">1</span>&lt;<span class="number">10</span> &amp;&amp; chessMap[y+<span class="number">1</span>][x][<span class="number">1</span>] != <span class="string">&#x27;红&#x27;</span>) &#123;</span><br><span class="line">            object.drawChoose(chessMap, roads, chess[<span class="number">0</span>], x, y+<span class="number">1</span>, x, y);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 左</span></span><br><span class="line">    <span class="keyword">if</span> (side == <span class="string">&#x27;黑&#x27;</span> &amp;&amp; y &lt; <span class="number">5</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (x-<span class="number">1</span>&gt;-<span class="number">1</span> &amp;&amp; chessMap[y][x-<span class="number">1</span>][<span class="number">1</span>] != <span class="string">&#x27;黑&#x27;</span>) &#123;</span><br><span class="line">            object.drawChoose(chessMap, roads, chess[<span class="number">0</span>], x-<span class="number">1</span>, y, x, y);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (side == <span class="string">&#x27;红&#x27;</span> &amp;&amp; y &gt; <span class="number">4</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (x-<span class="number">1</span>&gt;-<span class="number">1</span> &amp;&amp; chessMap[y][x-<span class="number">1</span>][<span class="number">1</span>] != <span class="string">&#x27;红&#x27;</span>) &#123;</span><br><span class="line">            object.drawChoose(chessMap, roads, chess[<span class="number">0</span>], x-<span class="number">1</span>, y, x, y);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// getZuRoad(0,3,&#x27;红&#x27;)</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>所以，到了这儿，我们手中的一颗颗棋子?，就知道他们各自能走到哪里了~</p>
</blockquote>
<h2 id="来到了大家会感兴趣的AI部分了"><a href="#来到了大家会感兴趣的AI部分了" class="headerlink" title="来到了大家会感兴趣的AI部分了"></a>来到了大家会感兴趣的AI部分了</h2></li>
<li>同样，参考了<a href="https://me.csdn.net/u012723995"><code>超逸_流</code></a>的<code>象棋AI算法</code>算法<blockquote>
<p>说实话，我是没怎么看懂，什么最小-最大搜索啦，什么负值最大函数，什么Alpha-Beta搜索通通是浮云哈哈哈o(<em>￣▽￣</em>)o，我按我自己的理解先写再说~</p>
</blockquote>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">doScore</span>(<span class="params">chess, nowScore</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> _side = chess[<span class="number">1</span>];</span><br><span class="line">    <span class="keyword">let</span> _chessName = chess[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">if</span> (_side == <span class="string">&#x27;黑&#x27;</span>) &#123;</span><br><span class="line">        nowScore[_side] = nowScore[_side] ? nowScore[_side] + scoreDic[_chessName] : scoreDic[_chessName];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (_side == <span class="string">&#x27;红&#x27;</span>) &#123;</span><br><span class="line">        nowScore[_side] = nowScore[_side] ? nowScore[_side] + scoreDic[_chessName] : scoreDic[_chessName];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getNowScore</span>(<span class="params">map</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> nowScore = &#123;</span><br><span class="line">        黑: <span class="number">0</span>,</span><br><span class="line">        红: <span class="number">0</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> y = <span class="number">0</span>; y &lt; chessMap.length; y++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> x = <span class="number">0</span>; x &lt; chessMap[y].length; x++) &#123;</span><br><span class="line">            <span class="keyword">let</span> chess = chessMap[y][x];</span><br><span class="line">            doScore(chess, nowScore);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> nowScore;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 会卡死，最后才出效果，目前没有效果</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">addLoadingLayer</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">document</span>.getElementsByClassName(<span class="string">&#x27;loading-layer&#x27;</span>)[<span class="number">0</span>].style.display = <span class="string">&#x27;inline-block&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">removeLoadingLayer</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">document</span>.getElementsByClassName(<span class="string">&#x27;loading-layer&#x27;</span>)[<span class="number">0</span>].style.display = <span class="string">&#x27;none&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> startTime;</span><br><span class="line"><span class="keyword">let</span> endTime;</span><br><span class="line"><span class="keyword">let</span> ccc = <span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">checkAllChess</span>(<span class="params">map=chessMap, parentSide=side, steps=[], parentScoreSum=<span class="number">0</span></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> chessMap = map;</span><br><span class="line">    calNum++</span><br><span class="line">    <span class="keyword">let</span> roads = [];</span><br><span class="line">    <span class="keyword">if</span> (steps.length == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">&#x27;chessMap&#x27;</span>, <span class="built_in">JSON</span>.parse(<span class="built_in">JSON</span>.stringify(chessMap)))</span><br><span class="line">        startTime = <span class="keyword">new</span> <span class="built_in">Date</span>().getTime();</span><br><span class="line">        addLoadingLayer();</span><br><span class="line">        bestSteps = [];</span><br><span class="line">        allSteps = [];</span><br><span class="line">        bestScore = -<span class="literal">Infinity</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (steps.length == <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(++ccc);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 计算哪一边</span></span><br><span class="line">    <span class="keyword">let</span> mainSide = parentSide;</span><br><span class="line">    <span class="keyword">if</span> (steps.length % <span class="number">2</span> == <span class="number">1</span> ) &#123;</span><br><span class="line">        mainSide = mainSide == <span class="string">&#x27;黑&#x27;</span> ? <span class="string">&#x27;红&#x27;</span> : <span class="string">&#x27;黑&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// round++</span></span><br><span class="line">    <span class="keyword">let</span> isAlive = <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> y = <span class="number">0</span>; y &lt; chessMap.length; y++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> x = <span class="number">0</span>; x &lt; chessMap[y].length; x++) &#123;</span><br><span class="line">            <span class="keyword">let</span> chess = chessMap[y][x];</span><br><span class="line">            <span class="keyword">if</span> (chess[<span class="number">1</span>] == parentSide) &#123;</span><br><span class="line">                <span class="keyword">if</span> (chess[<span class="number">0</span>] == <span class="string">&#x27;车&#x27;</span>) &#123;</span><br><span class="line">                    getJuRoad(chessMap, roads, x, y);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (chess[<span class="number">0</span>] == <span class="string">&#x27;马&#x27;</span>) &#123;</span><br><span class="line">                    getMaRoad(chessMap, roads, x, y);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (chess[<span class="number">0</span>] == <span class="string">&#x27;象&#x27;</span> || chess[<span class="number">0</span>] == <span class="string">&#x27;相&#x27;</span>) &#123;</span><br><span class="line">                    getXiangRoad(chessMap, roads, x, y, chess[<span class="number">1</span>]);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (chess[<span class="number">0</span>] == <span class="string">&#x27;士&#x27;</span> || chess[<span class="number">0</span>] == <span class="string">&#x27;仕&#x27;</span>) &#123;</span><br><span class="line">                    getShiRoad(chessMap, roads, x, y, chess[<span class="number">1</span>]);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (chess[<span class="number">0</span>] == <span class="string">&#x27;炮&#x27;</span> || chess[<span class="number">0</span>] == <span class="string">&#x27;砲&#x27;</span>) &#123;</span><br><span class="line">                    getPaoRoad(chessMap, roads, x, y)</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (chess[<span class="number">0</span>] == <span class="string">&#x27;卒&#x27;</span> || chess[<span class="number">0</span>] == <span class="string">&#x27;兵&#x27;</span>) &#123;</span><br><span class="line">                    getZuRoad(chessMap, roads, x, y, chess[<span class="number">1</span>]);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (chess[<span class="number">0</span>] == <span class="string">&#x27;将&#x27;</span> || chess[<span class="number">0</span>] == <span class="string">&#x27;帅&#x27;</span>) &#123;</span><br><span class="line">                    getJiangRoad(chessMap, roads, x, y, chess[<span class="number">1</span>]);</span><br><span class="line">                    isAlive = <span class="literal">true</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (isAlive &amp;&amp; round &lt; <span class="number">1000</span>) &#123;</span><br><span class="line">        <span class="keyword">let</span> localBestScore = parentSide == mainSide ? -<span class="literal">Infinity</span> : <span class="literal">Infinity</span>;</span><br><span class="line">        <span class="comment">// let road = roads[roads.length*Math.random()|0];</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; roads.length; i++) &#123;</span><br><span class="line">            <span class="keyword">let</span> _side = parentSide;</span><br><span class="line">            <span class="keyword">let</span> road = roads[i];</span><br><span class="line">            <span class="keyword">let</span> _map = <span class="built_in">JSON</span>.parse(<span class="built_in">JSON</span>.stringify(map))</span><br><span class="line">            <span class="comment">// map 改变原地图，_map改变模拟地图</span></span><br><span class="line">            <span class="keyword">let</span> eatedChess = _map[road._y][road._x];</span><br><span class="line">            <span class="keyword">let</span> playChess = _map[road.y][road.x];</span><br><span class="line">            <span class="keyword">let</span> score = downChess(_map, road._x, road._y, road.x, road.y, <span class="literal">false</span>);</span><br><span class="line">            <span class="keyword">let</span> scoreSum = parentScoreSum;</span><br><span class="line">            <span class="keyword">let</span> _steps = <span class="built_in">JSON</span>.parse(<span class="built_in">JSON</span>.stringify(steps));</span><br><span class="line">            <span class="keyword">if</span> (_side == mainSide) &#123;</span><br><span class="line">                score = score * (times  - _steps.length);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                score = -score * (times  - _steps.length);</span><br><span class="line">            &#125;</span><br><span class="line">            scoreSum += score;</span><br><span class="line">            _steps.push(&#123;</span><br><span class="line">                score,</span><br><span class="line">                _x: road._x,</span><br><span class="line">                _y: road._y,</span><br><span class="line">                x: road.x,</span><br><span class="line">                y: road.y,</span><br><span class="line">                playChess,</span><br><span class="line">                eatedChess,</span><br><span class="line">                id: uuid() </span><br><span class="line">            &#125;)</span><br><span class="line">            <span class="keyword">if</span> (_steps.length &lt; times) &#123;</span><br><span class="line">                <span class="comment">// _side = changeSide(_side);</span></span><br><span class="line">                <span class="comment">// checkAllChess(_map, _side, _steps, scoreSum);</span></span><br><span class="line">                <span class="keyword">if</span> (_side == mainSide &amp;&amp; score &gt;= localBestScore ) &#123;</span><br><span class="line">                    localBestScore = score;</span><br><span class="line">                    <span class="keyword">if</span> (score == localBestScore &amp;&amp; <span class="built_in">Math</span>.random()&gt;<span class="number">.5</span>) &#123;</span><br><span class="line">                        _side = changeSide(_side);</span><br><span class="line">                        checkAllChess(_map, _side, _steps, scoreSum);</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        _side = changeSide(_side);</span><br><span class="line">                        checkAllChess(_map, _side, _steps, scoreSum);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (_side != mainSide &amp;&amp; score &lt;= localBestScore ) &#123;</span><br><span class="line">                    localBestScore = score;</span><br><span class="line">                    <span class="keyword">if</span> (score == localBestScore &amp;&amp; <span class="built_in">Math</span>.random()&gt;<span class="number">.5</span>) &#123;</span><br><span class="line">                        _side = changeSide(_side);</span><br><span class="line">                        checkAllChess(_map, _side, _steps, scoreSum);</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        _side = changeSide(_side);</span><br><span class="line">                        checkAllChess(_map, _side, _steps, scoreSum);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                allSteps.push(_steps);</span><br><span class="line">                <span class="keyword">if</span> (scoreSum &gt; bestScore) &#123;</span><br><span class="line">                    bestScore = scoreSum;</span><br><span class="line">                    bestSteps = _steps;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> scoreSum = parentScoreSum;</span><br><span class="line">        <span class="keyword">if</span> (scoreSum &gt; bestScore) &#123;</span><br><span class="line">            bestScore = scoreSum;</span><br><span class="line">            bestSteps = steps;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// countFinal();</span></span><br><span class="line">    &#125;</span><br><span class="line">    calNum--;</span><br><span class="line">    <span class="keyword">if</span> (calNum == <span class="number">0</span>) &#123;</span><br><span class="line">        endTime = <span class="keyword">new</span> <span class="built_in">Date</span>().getTime();</span><br><span class="line">        removeLoadingLayer();</span><br><span class="line">        <span class="keyword">let</span> finalDic = &#123;&#125;;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; allSteps.length; i++) &#123;</span><br><span class="line">            <span class="keyword">let</span> _steps = allSteps[i];</span><br><span class="line">            <span class="keyword">let</span> accScore = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">let</span> j = <span class="number">0</span>; j &lt; times; j++) &#123;</span><br><span class="line">                _steps[j] = _steps[j] || &#123;</span><br><span class="line">                    score: <span class="number">0</span>,</span><br><span class="line">                    _x: -<span class="number">1</span>,</span><br><span class="line">                    _y: -<span class="number">1</span>,</span><br><span class="line">                    x: -<span class="number">1</span>,</span><br><span class="line">                    y: -<span class="number">1</span>,</span><br><span class="line">                    playChess: <span class="string">&#x27;　　　&#x27;</span>,</span><br><span class="line">                    eatedChess: <span class="string">&#x27;　　　&#x27;</span></span><br><span class="line">                &#125;</span><br><span class="line">                accScore += _steps[j].score;</span><br><span class="line">                _steps[j].accScore = accScore;</span><br><span class="line">            &#125;</span><br><span class="line">            _steps[times - <span class="number">1</span>].in = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">let</span> j = <span class="number">0</span>; j &lt; times; j++) &#123;</span><br><span class="line">                _steps[j].finalScore = accScore;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> accCheckDic = &#123;&#125;;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">&#x27;---------------&#x27;</span>,accCheckDic[<span class="string">&#x27;-&#x27;</span>])</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> j = times - <span class="number">1</span>; j &gt; -<span class="number">1</span>; j--) &#123;</span><br><span class="line">            <span class="keyword">if</span> (j % <span class="number">2</span> == <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="comment">// 自己方，越大越好</span></span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; allSteps.length; i++) &#123;</span><br><span class="line">                    <span class="keyword">let</span> _steps = allSteps[i];</span><br><span class="line">                    <span class="keyword">let</span> self = _steps[j];</span><br><span class="line">                    <span class="keyword">if</span> (!self.in) &#123;</span><br><span class="line">                        <span class="keyword">continue</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">let</span> parent = _steps[j - <span class="number">1</span>] || &#123;&#125;;</span><br><span class="line">                    <span class="keyword">let</span> parentKey = parent.id || <span class="string">&#x27;-&#x27;</span>;</span><br><span class="line">                    <span class="keyword">if</span> (!accCheckDic[parentKey]) &#123;</span><br><span class="line">                        accCheckDic[parentKey] = &#123;</span><br><span class="line">                            bestId: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">                            bestFinalScore: ((j % <span class="number">2</span>)-<span class="number">.5</span>)*<span class="number">2</span>*<span class="literal">Infinity</span></span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">if</span> (accCheckDic[parentKey].bestFinalScore &lt; self.finalScore) &#123;</span><br><span class="line">                        <span class="keyword">try</span> &#123;</span><br><span class="line">                            <span class="keyword">delete</span> accCheckDic[parentKey].parent.in;</span><br><span class="line">                        &#125; <span class="keyword">catch</span>(err) &#123;</span><br><span class="line"></span><br><span class="line">                        &#125;</span><br><span class="line">                        accCheckDic[parentKey] = &#123;</span><br><span class="line">                            bestId: self.id,</span><br><span class="line">                            level: j,</span><br><span class="line">                            bestFinalScore: self.finalScore,</span><br><span class="line">                            parent: parent,</span><br><span class="line">                            src: self</span><br><span class="line">                        &#125;</span><br><span class="line">                        parent.in = <span class="number">1</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (j % <span class="number">2</span> == <span class="number">1</span>) &#123;</span><br><span class="line">                <span class="comment">// 敌对方，越小越好</span></span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; allSteps.length; i++) &#123;</span><br><span class="line">                    <span class="keyword">let</span> _steps = allSteps[i];</span><br><span class="line">                    <span class="keyword">let</span> self = _steps[j];</span><br><span class="line">                    <span class="keyword">if</span> (!self.in) &#123;</span><br><span class="line">                        <span class="keyword">continue</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">let</span> parent = _steps[j - <span class="number">1</span>] || &#123;&#125;;</span><br><span class="line">                    <span class="keyword">let</span> parentKey = parent.id || <span class="string">&#x27;-&#x27;</span>;</span><br><span class="line">                    <span class="keyword">if</span> (!accCheckDic[parentKey]) &#123;</span><br><span class="line">                        accCheckDic[parentKey] = &#123;</span><br><span class="line">                            bestId: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">                            bestFinalScore: ((j % <span class="number">2</span>)-<span class="number">.5</span>)*<span class="number">2</span>*<span class="literal">Infinity</span></span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">if</span> (accCheckDic[parentKey].bestFinalScore &gt; self.finalScore) &#123;</span><br><span class="line">                        <span class="keyword">try</span> &#123;</span><br><span class="line">                            <span class="keyword">delete</span> accCheckDic[parentKey].parent.in;</span><br><span class="line">                        &#125; <span class="keyword">catch</span>(err) &#123;</span><br><span class="line"></span><br><span class="line">                        &#125;</span><br><span class="line">                        accCheckDic[parentKey] = &#123;</span><br><span class="line">                            bestId: self.id,</span><br><span class="line">                            level: j,</span><br><span class="line">                            bestFinalScore: self.finalScore,</span><br><span class="line">                            parent: parent,</span><br><span class="line">                            src: self</span><br><span class="line">                        &#125;</span><br><span class="line">                        parent.in = <span class="number">1</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">console</span>.log(accCheckDic)</span><br><span class="line">        <span class="built_in">console</span>.log(accCheckDic[<span class="string">&#x27;-&#x27;</span>])</span><br><span class="line">        <span class="built_in">console</span>.log(accCheckDic[accCheckDic[<span class="string">&#x27;-&#x27;</span>].bestId])</span><br><span class="line">        <span class="built_in">console</span>.log(allSteps);</span><br><span class="line">        <span class="built_in">console</span>.log(map)</span><br><span class="line">        downChess(map, accCheckDic[<span class="string">&#x27;-&#x27;</span>].src._x, accCheckDic[<span class="string">&#x27;-&#x27;</span>].src._y, accCheckDic[<span class="string">&#x27;-&#x27;</span>].src.x, accCheckDic[<span class="string">&#x27;-&#x27;</span>].src.y, <span class="literal">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> dic = &#123;&#125;;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">countFinal</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    dic[<span class="string">&#x27;count&#x27;</span>] = dic[<span class="string">&#x27;count&#x27;</span>] ? dic[<span class="string">&#x27;count&#x27;</span>] + <span class="number">1</span> : <span class="number">1</span>;</span><br><span class="line">    dic[round] = dic[round] ? dic[round] + <span class="number">1</span> : <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> y = <span class="number">0</span>; y &lt; chessMap.length; y++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> x = <span class="number">0</span>; x &lt; chessMap[y].length; x++) &#123;</span><br><span class="line">            <span class="keyword">let</span> chess = chessMap[y][x];</span><br><span class="line">            <span class="keyword">if</span> (chess !== <span class="string">&#x27;　　　&#x27;</span>) &#123;</span><br><span class="line">                dic[chess] = dic[chess] ? dic[chess]+<span class="number">1</span> : <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    chessMap = [</span><br><span class="line">        [<span class="string">&#x27;车红一&#x27;</span>, <span class="string">&#x27;马红一&#x27;</span>, <span class="string">&#x27;相红一&#x27;</span>, <span class="string">&#x27;仕红一&#x27;</span>, <span class="string">&#x27;帅红一&#x27;</span>, <span class="string">&#x27;仕红二&#x27;</span>, <span class="string">&#x27;相红二&#x27;</span>, <span class="string">&#x27;马红二&#x27;</span>, <span class="string">&#x27;车红二&#x27;</span>],</span><br><span class="line">        [<span class="string">&#x27;　　　&#x27;</span>, <span class="string">&#x27;　　　&#x27;</span>, <span class="string">&#x27;　　　&#x27;</span>, <span class="string">&#x27;　　　&#x27;</span>, <span class="string">&#x27;　　　&#x27;</span>, <span class="string">&#x27;　　　&#x27;</span>, <span class="string">&#x27;　　　&#x27;</span>, <span class="string">&#x27;　　　&#x27;</span>, <span class="string">&#x27;　　　&#x27;</span>],</span><br><span class="line">        [<span class="string">&#x27;　　　&#x27;</span>, <span class="string">&#x27;砲红一&#x27;</span>, <span class="string">&#x27;　　　&#x27;</span>, <span class="string">&#x27;　　　&#x27;</span>, <span class="string">&#x27;　　　&#x27;</span>, <span class="string">&#x27;　　　&#x27;</span>, <span class="string">&#x27;　　　&#x27;</span>, <span class="string">&#x27;砲红二&#x27;</span>, <span class="string">&#x27;　　　&#x27;</span>],</span><br><span class="line">        [<span class="string">&#x27;兵红一&#x27;</span>, <span class="string">&#x27;　　　&#x27;</span>, <span class="string">&#x27;兵红二&#x27;</span>, <span class="string">&#x27;　　　&#x27;</span>, <span class="string">&#x27;兵红三&#x27;</span>, <span class="string">&#x27;　　　&#x27;</span>, <span class="string">&#x27;兵红四&#x27;</span>, <span class="string">&#x27;　　　&#x27;</span>, <span class="string">&#x27;兵红五&#x27;</span>],</span><br><span class="line">        [<span class="string">&#x27;　　　&#x27;</span>, <span class="string">&#x27;　　　&#x27;</span>, <span class="string">&#x27;　　　&#x27;</span>, <span class="string">&#x27;　　　&#x27;</span>, <span class="string">&#x27;　　　&#x27;</span>, <span class="string">&#x27;　　　&#x27;</span>, <span class="string">&#x27;　　　&#x27;</span>, <span class="string">&#x27;　　　&#x27;</span>, <span class="string">&#x27;　　　&#x27;</span>],</span><br><span class="line">        [<span class="string">&#x27;　　　&#x27;</span>, <span class="string">&#x27;　　　&#x27;</span>, <span class="string">&#x27;　　　&#x27;</span>, <span class="string">&#x27;　　　&#x27;</span>, <span class="string">&#x27;　　　&#x27;</span>, <span class="string">&#x27;　　　&#x27;</span>, <span class="string">&#x27;　　　&#x27;</span>, <span class="string">&#x27;　　　&#x27;</span>, <span class="string">&#x27;　　　&#x27;</span>],</span><br><span class="line">        [<span class="string">&#x27;卒黑一&#x27;</span>, <span class="string">&#x27;　　　&#x27;</span>, <span class="string">&#x27;卒黑二&#x27;</span>, <span class="string">&#x27;　　　&#x27;</span>, <span class="string">&#x27;卒黑三&#x27;</span>, <span class="string">&#x27;　　　&#x27;</span>, <span class="string">&#x27;卒黑四&#x27;</span>, <span class="string">&#x27;　　　&#x27;</span>, <span class="string">&#x27;卒黑五&#x27;</span>],</span><br><span class="line">        [<span class="string">&#x27;　　　&#x27;</span>, <span class="string">&#x27;炮黑一&#x27;</span>, <span class="string">&#x27;　　　&#x27;</span>, <span class="string">&#x27;　　　&#x27;</span>, <span class="string">&#x27;　　　&#x27;</span>, <span class="string">&#x27;　　　&#x27;</span>, <span class="string">&#x27;　　　&#x27;</span>, <span class="string">&#x27;炮黑二&#x27;</span>, <span class="string">&#x27;　　　&#x27;</span>],</span><br><span class="line">        [<span class="string">&#x27;　　　&#x27;</span>, <span class="string">&#x27;　　　&#x27;</span>, <span class="string">&#x27;　　　&#x27;</span>, <span class="string">&#x27;　　　&#x27;</span>, <span class="string">&#x27;　　　&#x27;</span>, <span class="string">&#x27;　　　&#x27;</span>, <span class="string">&#x27;　　　&#x27;</span>, <span class="string">&#x27;　　　&#x27;</span>, <span class="string">&#x27;　　　&#x27;</span>],</span><br><span class="line">        [<span class="string">&#x27;车黑一&#x27;</span>, <span class="string">&#x27;马黑一&#x27;</span>, <span class="string">&#x27;象黑一&#x27;</span>, <span class="string">&#x27;士黑一&#x27;</span>, <span class="string">&#x27;将黑一&#x27;</span>, <span class="string">&#x27;士黑二&#x27;</span>, <span class="string">&#x27;象黑二&#x27;</span>, <span class="string">&#x27;马黑二&#x27;</span>, <span class="string">&#x27;车黑二&#x27;</span>]</span><br><span class="line">    ]</span><br><span class="line">    round = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">downChess</span>(<span class="params">map, _x, _y, x, y, isFlush=<span class="literal">true</span></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (_x==x&amp;&amp;_y==y) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">let</span> chessMap = map;</span><br><span class="line">    <span class="keyword">let</span> chess = chessMap[y][x].toString();</span><br><span class="line">    chessMap[y][x] = <span class="string">&#x27;　　　&#x27;</span>;</span><br><span class="line">    eatedChess = chessMap[_y][_x].toString();</span><br><span class="line">    chessMap[_y][_x] = chess;</span><br><span class="line">    <span class="keyword">if</span> (isFlush) &#123;</span><br><span class="line">        flushChessCanvas();</span><br><span class="line">        side = side == <span class="string">&#x27;黑&#x27;</span> ? <span class="string">&#x27;红&#x27;</span> : <span class="string">&#x27;黑&#x27;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (isGameMode &amp;&amp; eatedChess[<span class="number">0</span>] == <span class="string">&#x27;帅&#x27;</span>) &#123;</span><br><span class="line">            alert(<span class="string">&#x27;黑方胜&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (isGameMode &amp;&amp; eatedChess[<span class="number">0</span>] == <span class="string">&#x27;将&#x27;</span>) &#123;</span><br><span class="line">            alert(<span class="string">&#x27;红方胜&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> scoreDic[eatedChess[<span class="number">0</span>]];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">changeSide</span>(<span class="params">side</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (side == <span class="string">&#x27;黑&#x27;</span>) &#123;</span><br><span class="line">        side = <span class="string">&#x27;红&#x27;</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        side = <span class="string">&#x27;黑&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> side;</span><br><span class="line">&#125;</span><br><span class="line">flushChessCanvas()</span><br></pre></td></tr></table></figure>
<blockquote>
<p>这么大一串，我猜你们也不会去看，给你们大致讲一下吧</p>
</blockquote>
</li>
</ul>
<blockquote>
<p>大概就是搜索每一步每一方可走的路径，大约有<code>40</code>种可选路径，然后再这<code>40</code>种中随机挑选<code>1</code>条路，一直计算下去</p>
</blockquote>
<blockquote>
<p>当然，对手也不会太笨，他也会从这些中间挑<code>1</code>种走法，而且是最有利于他的方法（当然也可以选不利于他的，但他如果选了，我们赢得概率一定更大了）</p>
</blockquote>
<blockquote>
<p>所以层层下去，算出当下最利于我们的那一条路（考虑到对手选最好的情况下）</p>
</blockquote>
<h2 id="实现了AI后，不能走也不行啊"><a href="#实现了AI后，不能走也不行啊" class="headerlink" title="实现了AI后，不能走也不行啊"></a>实现了AI后，不能走也不行啊</h2><ul>
<li>所以，我实现了下棋的方法<h3 id="判断点击的位置"><a href="#判断点击的位置" class="headerlink" title="判断点击的位置"></a>判断点击的位置</h3></li>
<li>如果原先未选中棋子，就进入选择落子状态</li>
<li>如果原先选了棋子，就完成落子</li>
<li>如果没选中棋子/或者选了错误的落子点，就不予以反应<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> roads = [];</span><br><span class="line"><span class="keyword">let</span> selectedWhat = <span class="literal">null</span>;</span><br><span class="line">canvas1.addEventListener(<span class="string">&#x27;click&#x27;</span>, <span class="function">(<span class="params">e</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">let</span> viewWidth = <span class="built_in">window</span>.innerWidth;</span><br><span class="line">    <span class="keyword">if</span> (viewWidth &gt; <span class="number">1000</span>) &#123;</span><br><span class="line">        viewWidth = <span class="number">1000</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">let</span> canvasWidth = <span class="number">1005</span>;</span><br><span class="line">    <span class="keyword">let</span> ctx = canvas1.getContext(<span class="string">&#x27;2d&#x27;</span>);</span><br><span class="line">    ctx.fillStyle = <span class="string">&#x27;black&#x27;</span>;</span><br><span class="line">    <span class="keyword">let</span> locX = e.clientX/viewWidth*canvasWidth;</span><br><span class="line">    <span class="keyword">let</span> locY = e.clientY/viewWidth*canvasWidth;</span><br><span class="line">    <span class="keyword">let</span> r = <span class="number">50</span>;</span><br><span class="line">    <span class="keyword">let</span> x = (locX+r-<span class="number">100</span>)/<span class="number">100</span>|<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">let</span> y = (locY+r-<span class="number">100</span>)/<span class="number">100</span>|<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; roads.length; i++) &#123;</span><br><span class="line">        <span class="keyword">let</span> road = roads[i];</span><br><span class="line">        <span class="keyword">if</span> (road._x == x &amp;&amp; road._y == y) &#123;</span><br><span class="line">            <span class="keyword">let</span> chess = chessMap[road.y][road.x];</span><br><span class="line">            downChess(chessMap, road._x, road._y, road.x, road.y);</span><br><span class="line">            side = chess[<span class="number">1</span>] == <span class="string">&#x27;黑&#x27;</span> ? <span class="string">&#x27;红&#x27;</span> : <span class="string">&#x27;黑&#x27;</span>;</span><br><span class="line">            roads = [];</span><br><span class="line">            selectedWhat = <span class="literal">null</span>;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (chessMap[y][x] != <span class="string">&#x27;　　　&#x27;</span>) &#123;</span><br><span class="line">        <span class="comment">// ctx.fillText(`($&#123;x&#125;,$&#123;y&#125;)$&#123;chessMap[y][x]&#125;`, locX, locY);</span></span><br><span class="line">        selectedWhat = selectedWhat == chessMap[y][x] ? <span class="literal">null</span> : chessMap[y][x];</span><br><span class="line">        <span class="keyword">if</span> (selectedWhat) &#123;</span><br><span class="line">            ctx.fillStyle = <span class="string">&#x27;blue&#x27;</span>;</span><br><span class="line">            flushChessCanvas();</span><br><span class="line">            roads = [];</span><br><span class="line">            getChessRoads(chessMap, x, y);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            flushChessCanvas();</span><br><span class="line">            roads = [];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">let</span> autoBtn = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;#auto-btn&#x27;</span>);</span><br><span class="line">autoBtn.onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    checkAllChess()</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> resetBtn = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;#reset-btn&#x27;</span>);</span><br><span class="line">resetBtn.onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    resetMap();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="得出选中棋子的可走路径（可落子点）"><a href="#得出选中棋子的可走路径（可落子点）" class="headerlink" title="得出选中棋子的可走路径（可落子点）"></a>得出选中棋子的可走路径（可落子点）</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getChessRoads</span>(<span class="params">map=chessMap, x, y</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> chessMap = map;</span><br><span class="line">    <span class="keyword">let</span> chess = chessMap[y][x];</span><br><span class="line">    <span class="keyword">let</span> isAlive = <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">if</span> (chess[<span class="number">0</span>] == <span class="string">&#x27;车&#x27;</span>) &#123;</span><br><span class="line">        getJuRoad(chessMap, roads, x, y);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (chess[<span class="number">0</span>] == <span class="string">&#x27;马&#x27;</span>) &#123;</span><br><span class="line">        getMaRoad(chessMap, roads, x, y);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (chess[<span class="number">0</span>] == <span class="string">&#x27;象&#x27;</span> || chess[<span class="number">0</span>] == <span class="string">&#x27;相&#x27;</span>) &#123;</span><br><span class="line">        getXiangRoad(chessMap, roads, x, y, chess[<span class="number">1</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (chess[<span class="number">0</span>] == <span class="string">&#x27;士&#x27;</span> || chess[<span class="number">0</span>] == <span class="string">&#x27;仕&#x27;</span>) &#123;</span><br><span class="line">        getShiRoad(chessMap, roads, x, y, chess[<span class="number">1</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (chess[<span class="number">0</span>] == <span class="string">&#x27;炮&#x27;</span> || chess[<span class="number">0</span>] == <span class="string">&#x27;砲&#x27;</span>) &#123;</span><br><span class="line">        getPaoRoad(chessMap, roads, x, y)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (chess[<span class="number">0</span>] == <span class="string">&#x27;卒&#x27;</span> || chess[<span class="number">0</span>] == <span class="string">&#x27;兵&#x27;</span>) &#123;</span><br><span class="line">        getZuRoad(chessMap, roads, x, y, chess[<span class="number">1</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (chess[<span class="number">0</span>] == <span class="string">&#x27;将&#x27;</span> || chess[<span class="number">0</span>] == <span class="string">&#x27;帅&#x27;</span>) &#123;</span><br><span class="line">        getJiangRoad(chessMap, roads, x, y, chess[<span class="number">1</span>]);</span><br><span class="line">        isAlive = <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; roads.length; i++) &#123;</span><br><span class="line">        <span class="keyword">let</span> road = roads[i];</span><br><span class="line">        object.showRoad(chess[<span class="number">0</span>], road._x, road._y, road.x, road.y);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>这一处是纯自己实现的哦，此处可以有专利O(∩_∩)O</p>
</blockquote>
</li>
</ul>
<blockquote>
<p>大概就是，点击事件后，通过<code>clientX</code>和<code>clientY</code>计算那个位置所在的棋子是什么 xiang’qi</p>
</blockquote>
<blockquote>
<p>然后第二次点击事件后，通过<code>clientX</code>和<code>clientY</code>计算目标位置是什么，不管那个位置是什么，只要在选中棋子的合规落子范围内，都把棋子走过去就OK啦</p>
</blockquote>
<blockquote>
<p>然后根据新得<code>Map</code>重绘<code>Canvas</code></p>
</blockquote>
<p><img src="https://img-blog.csdnimg.cn/20190218221710817.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3E3MjM4OTI2eg==,size_16,color_FFFFFF,t_70#pi500x" alt="点击炮后的效果"></p>
<h2 id="小花絮"><a href="#小花絮" class="headerlink" title="小花絮"></a>小花絮</h2><blockquote>
<p>戊戌年的除夕，给爷爷看了我这个初版</p>
</blockquote>
<blockquote>
<p>我：我写了个电脑，可是怎么下，他都走的不对</p>
</blockquote>
<blockquote>
<p>爷爷：慢慢来么，像以前游戏机里的那个老人、中年人、长头发的女的和小孩，你先试着把那个小孩下赢嘛</p>
</blockquote>
<blockquote>
<p>我：哦哦，对的，我先一步步来?</p>
</blockquote>
<blockquote>
<p>==最后的最后==，在己亥的正月初一完成了我的算是一个完整版，爷爷很认真的和我的AI下了一局</p>
</blockquote>
<blockquote>
<p>我还是完败，哈哈哈?，后来事实证明我的确写了个笨呼呼的AI呢（它也同样输给了小青和我妹妹），之后再优化吧~但感觉心里还是蛮开心的</p>
</blockquote>
<blockquote>
<p>发现CSDN发布文章&gt;改文章&gt;重新发布 可以刷积分耶( •̀ ω •́ )y</p>
</blockquote>
<h3 id="爷爷口中的那个游戏"><a href="#爷爷口中的那个游戏" class="headerlink" title="爷爷口中的那个游戏"></a>爷爷口中的那个游戏</h3><p><img src="https://img-blog.csdnimg.cn/20190218223556616.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3E3MjM4OTI2eg==,size_16,color_FFFFFF,t_70#pi500x" alt="defaultPic"><br><img src="https://img-blog.csdnimg.cn/20190218223650695.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3E3MjM4OTI2eg==,size_16,color_FFFFFF,t_70#pi500x" alt="defaultPic"></p>
<h2 id="项目地址"><a href="#项目地址" class="headerlink" title="项目地址"></a>项目地址</h2><p><a href="https://gitee.com/ko-orz/chinese_chess/">https://gitee.com/ko-orz/chinese_chess/</a></p>
<h2 id="预览地址"><a href="#预览地址" class="headerlink" title="预览地址"></a>预览地址</h2><p><a href="https://www.tekii.cn/public/chinese_chess/">https://www.tekii.cn/public/chinese_chess/</a></p>
<h2 id="特别感谢"><a href="#特别感谢" class="headerlink" title="特别感谢"></a>特别感谢</h2><p>[1] 欲泪成雪. <a href="https://www.cnblogs.com/SeeYouBug/p/html_canvas_seeyoubug.html">HTML5学习总结——canvas绘制象棋(canvas绘图)</a> 2016-11-24 18:03<br>[2] 超逸_流. <a href="https://blog.csdn.net/u012723995/article/details/47133693">象棋AI算法（一）</a> 2015-07-29 21:29:28<br>[3] 超逸_流. <a href="https://blog.csdn.net/u012723995/article/details/47143569">象棋AI算法（二）</a> 2015-07-30 14:11:37<br>[4] 写了这篇文章的2019年02月18日22时41分的Maxmon</p>
]]></content>
      <tags>
        <tag>AI</tag>
      </tags>
  </entry>
  <entry>
    <title>『003』闲下来，写个算24点的工具吧(ノωく)</title>
    <url>/2019/02/21/tool24/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote>
<p>昨天在群里看到了一个分享的小游戏《王者算<code>24点</code>》</p>
</blockquote>
<blockquote>
<p>然后开心地分享了自己<code>340秒</code>算<code>10个</code>的战绩</p>
</blockquote>
<a id="more"></a>

<p><img src="https://img-blog.csdnimg.cn/20190221210622103.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3E3MjM4OTI2eg==,size_16,color_FFFFFF,t_70#pi500x" alt="defaultPic"></p>
<blockquote>
<p>结果被小青瞬间KO。。她用<code>202秒</code>就结束了</p>
</blockquote>
<p><img src="https://img-blog.csdnimg.cn/20190221210606371.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3E3MjM4OTI2eg==,size_16,color_FFFFFF,t_70#pi500x" alt="defaultPic"></p>
<blockquote>
<p>既然作为程序员，那就用程序员的方式来继续战斗吧~</p>
</blockquote>
<h2 id="算法研究"><a href="#算法研究" class="headerlink" title="算法研究"></a>算法研究</h2><blockquote>
<p>说到<code>24点</code>，无非就是<code>4个</code>数字之间的组合，也不知道是怎么写的，反正我最后算出来是有<code>3888种</code>组合方式，只要算完这<code>3888种</code>，就能找出结果了，不然就是没有结果</p>
</blockquote>
<blockquote>
<ul>
<li>先从<code>4个</code>里挑<code>1个</code></li>
<li>从剩下<code>3个</code>里挑<code>1个</code></li>
<li>组合后计算出<code>1个</code>新的数字（通过加减乘除）</li>
<li>去掉挑出的<code>2个</code>数字，加入新的数字</li>
<li>循环往复</li>
</ul>
</blockquote>
<h2 id="核心代码"><a href="#核心代码" class="headerlink" title="核心代码"></a>核心代码</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 相当与是每一次计算的分布</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param </span>arr &#123;Array&#125; 一堆数字</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param </span>step &#123;Array&#125; 一堆步骤</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getOneCalc</span>(<span class="params">arr, step</span>) </span>&#123;</span><br><span class="line">    step = step || [];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> j = i + <span class="number">1</span>; j &lt; arr.length; j++) &#123;</span><br><span class="line">            <span class="comment">/** </span></span><br><span class="line"><span class="comment">             * 0 a+b</span></span><br><span class="line"><span class="comment">             * 1 a-b</span></span><br><span class="line"><span class="comment">             * 2 b-a</span></span><br><span class="line"><span class="comment">             * 3 a*b</span></span><br><span class="line"><span class="comment">             * 4 a/b</span></span><br><span class="line"><span class="comment">             * 5 b/a</span></span><br><span class="line"><span class="comment">             */</span>                     </span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">let</span> z = <span class="number">0</span>; z &lt; <span class="number">6</span>; z++) &#123;</span><br><span class="line">                <span class="keyword">let</span> newVal;</span><br><span class="line">                <span class="keyword">let</span> newArr = getOtherNum(arr, i, j);</span><br><span class="line">                <span class="keyword">let</span> newStep = <span class="built_in">JSON</span>.parse(<span class="built_in">JSON</span>.stringify(step));</span><br><span class="line">                <span class="keyword">if</span> (z == <span class="number">0</span>) &#123;</span><br><span class="line">                	<span class="comment">// 计算新的值</span></span><br><span class="line">                    newVal = <span class="built_in">Number</span>(arr[i]) + <span class="built_in">Number</span>(arr[j]);</span><br><span class="line">                    <span class="comment">// 用来记录操作方法，最后看出流程用</span></span><br><span class="line">                    newStep.push(arr[i] + <span class="string">&#x27;+&#x27;</span> + arr[j]);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (z == <span class="number">1</span>) &#123;</span><br><span class="line">                    newVal = arr[i] - arr[j];</span><br><span class="line">                    newStep.push(arr[i] + <span class="string">&#x27;-&#x27;</span> + arr[j]);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (z == <span class="number">2</span>) &#123;</span><br><span class="line">                    newVal = arr[j] - arr[i];</span><br><span class="line">                    newStep.push(arr[j] + <span class="string">&#x27;-&#x27;</span> + arr[i]);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (z == <span class="number">3</span>) &#123;</span><br><span class="line">                    newVal = arr[i] * arr[j];</span><br><span class="line">                    newStep.push(arr[i] + <span class="string">&#x27;*&#x27;</span> + arr[j]);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (z == <span class="number">4</span>) &#123;</span><br><span class="line">                    newVal = arr[i] / arr[j];</span><br><span class="line">                    newStep.push(arr[i] + <span class="string">&#x27;/&#x27;</span> + arr[j]);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (z == <span class="number">5</span>) &#123;</span><br><span class="line">                    newVal = arr[j] / arr[i];</span><br><span class="line">                    newStep.push(arr[j] + <span class="string">&#x27;/&#x27;</span> + arr[i]);</span><br><span class="line">                &#125;</span><br><span class="line">                newArr.push(newVal);</span><br><span class="line">                <span class="keyword">if</span> (newArr.length !== <span class="number">1</span>) &#123;</span><br><span class="line">                	<span class="comment">// 如果还没有计算到最后的值，就继续计算</span></span><br><span class="line">                    getOneCalc(newArr, newStep)</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                	<span class="comment">// 如果最后的结果正确，就打印计算流程</span></span><br><span class="line">                    <span class="keyword">if</span> (newArr[<span class="number">0</span>] === <span class="number">24</span>) &#123;</span><br><span class="line">                        <span class="built_in">console</span>.log(newArr[<span class="number">0</span>], newStep);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="最终效果"><a href="#最终效果" class="headerlink" title="最终效果"></a>最终效果</h2><blockquote>
<p>达成了<code>160秒</code>完成了<code>10题</code>的成就，超越了<code>99%</code>的玩家~</p>
</blockquote>
<blockquote>
<p>主要是输入和判断还要时间( •̀ ω •́ )y，不然还可以更快</p>
</blockquote>
<p><img src="https://img-blog.csdnimg.cn/20190221213541519.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3E3MjM4OTI2eg==,size_16,color_FFFFFF,t_70#pi500x" alt="defaultPic"></p>
<h2 id="小插叙"><a href="#小插叙" class="headerlink" title="小插叙"></a>小插叙</h2><blockquote>
<p>小青说少玩游戏，特别是这类游戏的整体感觉还不行（哈哈，论UI的重要性了），顺带一提，长期寻找UI美术小伙伴一起研发小游戏，有兴趣的可以联系我哈<code>tel:18868196263</code>~</p>
</blockquote>
<h2 id="体验地址"><a href="#体验地址" class="headerlink" title="体验地址"></a>体验地址</h2><p><a href="https://www.tekii.cn/public/24/">https://www.tekii.cn/public/24/</a></p>
<blockquote>
<p>Chrome里面<code>textarea</code>换行有问题，可以在手机上访问该页面</p>
</blockquote>
<h2 id="项目地址"><a href="#项目地址" class="headerlink" title="项目地址"></a>项目地址</h2><p><a href="https://gitee.com/ko-orz/24/">https://gitee.com/ko-orz/24/</a></p>
<h2 id="特别感谢"><a href="#特别感谢" class="headerlink" title="特别感谢"></a>特别感谢</h2><p>[1] 匿名. 《王者算24点》2019-02-12<br>[2] 小青. 体验游戏 2019-02-20<br>[3] 写了这篇文章的2019年02月21日21时29分的Maxmon</p>
]]></content>
      <tags>
        <tag>AI</tag>
      </tags>
  </entry>
  <entry>
    <title>『004』会爬取微信文章的小爬虫ヾ(•ω•`)o</title>
    <url>/2019/05/30/wechatPageSpider/</url>
    <content><![CDATA[<p><img src="https://img-blog.csdnimg.cn/2019021423465864.png#pic_center" alt="Maxmon"></p>
<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote>
<p>老板：微信公众号要精简，把之前发的文章都删掉吧！</p>
</blockquote>
<blockquote>
<p>Maxmon：好的~</p>
</blockquote>
<blockquote>
<p>Maxmon：（万一之后文章又需要了，要是直接删了多可惜，偷偷地做个备份吧）</p>
</blockquote>
<a id="more"></a>
<h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><blockquote>
<p>看了下公众号，有直接删除文章的按钮，但好像没有保存已发布文章的地方，那怎么做存储呢？</p>
</blockquote>
<blockquote>
<p>想来想去，就想到了爬虫~</p>
</blockquote>
<h2 id="开始代码"><a href="#开始代码" class="headerlink" title="开始代码"></a>开始代码</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> axios = <span class="built_in">require</span>(<span class="string">&#x27;axios&#x27;</span>); <span class="comment">// 网络请求</span></span><br><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">&#x27;fs&#x27;</span>); <span class="comment">// 文件存储</span></span><br><span class="line"><span class="keyword">const</span> cheerio = <span class="built_in">require</span>(<span class="string">&#x27;cheerio&#x27;</span>); <span class="comment">// 解析HTML文件</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 获取文章函数</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">getArticle</span>(<span class="params">articleUrl</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;articleUrl&#x27;</span>, articleUrl)</span><br><span class="line">    <span class="keyword">let</span> a = <span class="keyword">await</span> axios.get(articleUrl);</span><br><span class="line">    <span class="keyword">let</span> data = a.data;</span><br><span class="line">    <span class="keyword">let</span> $ = cheerio.load(data);</span><br><span class="line">    <span class="keyword">let</span> title = $(<span class="string">&#x27;#activity-name&#x27;</span>).text().replace(<span class="regexp">/[\s—|]/g</span>,<span class="string">&#x27;&#x27;</span>); <span class="comment">// 获取 微信文章-标题</span></span><br><span class="line">    <span class="keyword">let</span> timeMatch = data.match(<span class="regexp">/var publish_time = &quot;(.*?)\&quot;/</span>) <span class="comment">// 获取 微信文章-发布时间</span></span><br><span class="line">    <span class="keyword">let</span> time = <span class="string">&#x27;0000-00-00&#x27;</span>;</span><br><span class="line">    <span class="keyword">if</span> (timeMatch) time = timeMatch[<span class="number">1</span>] || time;</span><br><span class="line">    <span class="keyword">let</span> imgs = $(<span class="string">&#x27;img&#x27;</span>)</span><br><span class="line">    <span class="keyword">let</span> fileName = <span class="string">`<span class="subst">$&#123;time&#125;</span> <span class="subst">$&#123;title&#125;</span>`</span>;</span><br><span class="line">    <span class="comment">// 判断本地是否已经抓过这个页面，抓取过就跳过</span></span><br><span class="line">    <span class="keyword">if</span> (fs.existsSync(<span class="string">`<span class="subst">$&#123;fileName&#125;</span>.html`</span>)) &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(fileName, <span class="string">&#x27;已抓取 跳过&#x27;</span>)</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; imgs.length; i++) &#123;</span><br><span class="line">        <span class="keyword">let</span> attribs = imgs[i].attribs;</span><br><span class="line">        <span class="keyword">let</span> url = attribs[<span class="string">&#x27;data-src&#x27;</span>];</span><br><span class="line">        <span class="keyword">if</span> (url) &#123;</span><br><span class="line">            <span class="keyword">let</span> imgType = attribs.type || <span class="string">&#x27;jpeg&#x27;</span>;</span><br><span class="line">            <span class="keyword">if</span> (!fs.existsSync(fileName)) &#123;</span><br><span class="line">                fs.mkdirSync(fileName)</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">let</span> locPath = <span class="string">`./<span class="subst">$&#123;fileName&#125;</span>/<span class="subst">$&#123;i&#125;</span>.<span class="subst">$&#123;imgType&#125;</span>`</span></span><br><span class="line">            <span class="keyword">await</span> getImg(url, locPath);</span><br><span class="line">            imgs[i].attribs.src = locPath;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    fs.writeFileSync(<span class="string">`<span class="subst">$&#123;fileName&#125;</span>.html`</span>, $.html());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 获取图片等资源文件</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">getImg</span>(<span class="params">url, locPath</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> b =  <span class="keyword">await</span> axios.get(url, &#123;</span><br><span class="line">        responseType: <span class="string">&quot;arraybuffer&quot;</span>,</span><br><span class="line">    &#125;);</span><br><span class="line">    fs.writeFileSync(locPath, Buffer.from(b.data, <span class="string">&#x27;base64&#x27;</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">getArticle(<span class="string">&#x27;https://mp.weixin.qq.com/s/p4It1825oDJSBUZsSax1cA&#x27;</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="小插叙"><a href="#小插叙" class="headerlink" title="小插叙"></a>小插叙</h2><blockquote>
<p>在抓取完所有网页之后，我大胆地删除了已发布的文章，大概<code>50</code>多篇呢，然后…</p>
</blockquote>
<blockquote>
<p>。。。。我发现，原来文章素材那里本来就是有备份的?</p>
</blockquote>
<h2 id="体验地址"><a href="#体验地址" class="headerlink" title="体验地址"></a>体验地址</h2><ul>
<li>最后成功抓取的页面</li>
</ul>
<blockquote>
<p><a href="https://tekii.cn/public/blog/004/2019-05-21%20%E4%B8%96%E7%95%8C%E5%AE%B6%E5%BA%AD%E5%8C%BB%E7%94%9F%E6%97%A5%E6%90%BA%E6%89%8B%E5%AE%B6%E5%BA%AD%E5%8C%BB%E7%94%9F%EF%BC%8C%E5%85%B1%E7%AD%91%E5%81%A5%E5%BA%B7%E7%94%9F%E6%B4%BB.html">世界家庭医生日 | 携手家庭医生，共筑健康生活</a><br><a href="https://tekii.cn/public/blog/004/2018-07-02%20%E5%A4%8F%E5%AD%A3%E9%98%B2%E8%9A%8A%E5%B0%8F%E5%A6%99%E6%8B%9B%EF%BC%8C%E5%AE%B6%E6%9C%89%E5%AE%9D%E5%AE%9D%E7%9A%84%E4%B8%80%E5%AE%9A%E8%A6%81%E7%9C%8B%E5%93%A6%EF%BC%81.html">夏季防蚊小妙招，家有宝宝的一定要看哦！</a></p>
</blockquote>
<h2 id="项目地址"><a href="#项目地址" class="headerlink" title="项目地址"></a>项目地址</h2><blockquote>
<p><a href="https://gitee.com/ko-orz/wechat_article_crawler">https://gitee.com/ko-orz/wechat_article_crawler</a></p>
</blockquote>
<h2 id="感谢"><a href="#感谢" class="headerlink" title="感谢"></a>感谢</h2><ul>
<li>老板</li>
<li>node、fs、axios、cheerio、微信</li>
<li>没有搞清楚微信公众号原理的自己</li>
</ul>
]]></content>
      <tags>
        <tag>微信</tag>
        <tag>爬虫</tag>
        <tag>HTML</tag>
        <tag>NodeJS</tag>
      </tags>
  </entry>
  <entry>
    <title>【微信小程序】『001』onShareAppMessage分享时带参消失问题</title>
    <url>/2020/07/19/minappOnShare/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote>
<p>最近在用uni-app写微信小程序《天奇达人》，一款用来推荐微信小程序的小程序。</p>
</blockquote>
<blockquote>
<p>开发中用到了用户<code>分享小程序</code>的接口。</p>
</blockquote>
<a id="more"></a>
<h2 id="问题：query没有传入"><a href="#问题：query没有传入" class="headerlink" title="问题：query没有传入"></a>问题：query没有传入</h2><blockquote>
<p>然后需要知道用户分享了哪一个小程序，需要用到分享时传入的query参数了。<br><img src="https://img-blog.csdnimg.cn/20200719131240261.jpg#pic_center" alt="在这里插入图片描述"></p>
</blockquote>
<blockquote>
<p>这时候看微信文档，有onShareAppMessage这个接口，但发现里面的<code>query</code>参数在用户接收的时候不见了。<br> <a href="https://developers.weixin.qq.com/minigame/dev/api/share/wx.onShareAppMessage.html">wx.onShareAppMessage(function callback) | 微信开放文档</a></p>
</blockquote>
<h2 id="解决：query没有传入"><a href="#解决：query没有传入" class="headerlink" title="解决：query没有传入"></a>解决：query没有传入</h2><blockquote>
<p>研究后发现，onShareAppMessage有个隐藏的参数叫path。<br>通过<code>path</code>参数，传入类似<code>pages/share/share?game=helloWorld</code>这样的参数，就可以带上参数了（还意外发现这个可以直接跳转到某个页面了，不用自己实现了(ง •_•)ง）。具体代码参考下面👇</p>
</blockquote>
<blockquote>
<p>wxml里写<code>open-type=&quot;share&quot;</code>的一个button</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;share-btn&quot;</span> <span class="attr">:data-name</span>=<span class="string">&quot;item.name&quot;</span> <span class="attr">open-type</span>=<span class="string">&quot;share&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;shareMinapp&quot;</span>&gt;</span>分享<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure>
</blockquote>
<blockquote>
<p>methods里面写触发分享的函数</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// export default -&gt; methods</span></span><br><span class="line"><span class="function"><span class="title">shareMinapp</span>(<span class="params">ev</span>)</span> &#123;</span><br><span class="line">	wx.showShareMenu(); <span class="comment">// 触发分享</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</blockquote>
<blockquote>
<p>最外层写上监听分享的函数</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// export default</span></span><br><span class="line">onShareAppMessage: <span class="function">(<span class="params">ev</span>) =&gt;</span> &#123;</span><br><span class="line">	<span class="keyword">let</span> &#123; dataset &#125; = ev.target;</span><br><span class="line">	<span class="keyword">let</span> name = <span class="built_in">encodeURIComponent</span>(dataset.name);</span><br><span class="line">	<span class="keyword">let</span> query = <span class="string">`name=<span class="subst">$&#123;name&#125;</span>`</span></span><br><span class="line">	<span class="keyword">let</span> returnDic = &#123;</span><br><span class="line">		title: dataset.name || <span class="string">&#x27;买量卖量对接平台&#x27;</span>,</span><br><span class="line">		imageUrl: <span class="string">&#x27;https://tekii.cn/share2.jpg&#x27;</span>, <span class="comment">// 图片 URL，不填就是当前页面截图</span></span><br><span class="line">		path: <span class="string">`pages/share/share?<span class="subst">$&#123;query&#125;</span>`</span>,</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</blockquote>
<h2 id="问题：获取不到query"><a href="#问题：获取不到query" class="headerlink" title="问题：获取不到query"></a>问题：获取不到query</h2><blockquote>
<p> <a href="https://developers.weixin.qq.com/minigame/dev/api/base/app/life-cycle/wx.getLaunchOptionsSync.html">Object wx.getLaunchOptionsSync() | 微信开放文档</a><br>用这个发现小程序如果已经打开了，再点用户分享的是获取不到的。除非删掉小程序，再打开分享的链接，才能获取到query。</p>
</blockquote>
<h2 id="解决：获取不到query"><a href="#解决：获取不到query" class="headerlink" title="解决：获取不到query"></a>解决：获取不到query</h2><p><img src="https://img-blog.csdnimg.cn/20200719131153345.jpg#pic_center" alt="在这里插入图片描述"></p>
<blockquote>
<p><code>wx.onShareAppMessage</code>的文档里有提到，还可以用<code>wx.onShow()</code>获取到query。<br>那就我们就用官方的另一种方式，<code>onShow</code>(我在uni-app项目里是写在<code>App.vue</code>文件里的，原生小程序代码可以自己研究下，差不大多)。我在最外层存储launchOptions，在需要用的地方，拿出来。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// export default</span></span><br><span class="line">onShow: <span class="function"><span class="keyword">function</span>(<span class="params">launchOptions</span>) </span>&#123;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&#x27;App Show&#x27;</span>, launchOptions);</span><br><span class="line">uni.setStorageSync(<span class="string">&#x27;launchOptions&#x27;</span>, launchOptions); <span class="comment">// 这里的uni.就对应微信里的wx.</span></span><br><span class="line">&gt;&#125;</span><br></pre></td></tr></table></figure>
</blockquote>
<blockquote>
<p>在<code>share.vue</code>，即使用的地方获取本地存储，用完就删</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// export default</span></span><br><span class="line"><span class="function"><span class="title">onShow</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">	<span class="keyword">let</span> that = <span class="built_in">this</span>;</span><br><span class="line">	<span class="keyword">let</span> launchOptions = uni.getStorageSync(<span class="string">&#x27;launchOptions&#x27;</span>);</span><br><span class="line">	uni.setStorageSync(<span class="string">&#x27;launchOptions&#x27;</span>, <span class="literal">null</span>);</span><br><span class="line">	<span class="keyword">let</span> &#123; query &#125; = launchOptions;</span><br><span class="line">	<span class="keyword">let</span> name = <span class="built_in">decodeURIComponent</span>(query.name || <span class="string">&#x27;&#x27;</span>);</span><br><span class="line">	that.$set(that.$data, <span class="string">&#x27;name&#x27;</span>, name);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</blockquote>
<h2 id="附言"><a href="#附言" class="headerlink" title="附言"></a>附言</h2><blockquote>
<p>这是我用<code>uni-app</code>开发<code>微信小程序</code>的<code>分享功能</code>时碰到的问题和解决方案，如果有任何不对的地方欢迎留言指正:p。有不懂的地方你也可以问，如果恰好我会，我会回答你的╰(￣ω￣ｏ)</p>
</blockquote>
<h2 id="特别感谢"><a href="#特别感谢" class="headerlink" title="特别感谢"></a>特别感谢</h2><p>[1] <a href="https://developers.weixin.qq.com/minigame/dev/api/share/wx.onShareAppMessage.html">wx.onShareAppMessage(function callback) | 微信开放文档</a><br>[2] <a href="https://developers.weixin.qq.com/minigame/dev/api/base/app/life-cycle/wx.getLaunchOptionsSync.html">Object wx.getLaunchOptionsSync() | 微信开放文档</a><br>[3] 查的资料太多，这里就不一一列举了<br>[4] 写了这篇文章的2020年07月19日12时57分的Maxmon</p>
]]></content>
      <tags>
        <tag>微信</tag>
        <tag>MinApp</tag>
      </tags>
  </entry>
  <entry>
    <title>【NodeJS】『001』Windows下npm全局安装的包Cannot find module( $ _ $ )</title>
    <url>/2020/05/22/nodeNpmMiss/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote>
<p>今天需要用到jimp包用来处理图像</p>
</blockquote>
<blockquote>
<p>然后npm i jimp -g全局安装了</p>
</blockquote>
<blockquote>
<p>结果进入node去引入包</p>
</blockquote>
<a id="more"></a>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="built_in">require</span>(<span class="string">&#x27;jimp&#x27;</span>)</span><br></pre></td></tr></table></figure>
<blockquote>
<p>直接报错了，错误为<code>Uncaught Error: Cannot find module &#39;jimp&#39;</code></p>
</blockquote>
<h2 id="找问题"><a href="#找问题" class="headerlink" title="找问题"></a>找问题</h2><blockquote>
<p>通过百度、bing、google(需要梯子)，找到了解决办法</p>
</blockquote>
<h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><blockquote>
<p>先查询全局会安装在哪里</p>
</blockquote>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">npm prefix -g</span><br></pre></td></tr></table></figure>
<blockquote>
<p>或者来看详细安装信息</p>
</blockquote>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">npm install --global --verbose jimp</span><br></pre></td></tr></table></figure>
<blockquote>
<p>然后会发现，我这里的安装目录在<code>C:\Users\Maxmon\AppData\Roaming\npm</code><br>把包的安装目录放到环境变量<code>NODE_PATH</code>中</p>
</blockquote>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">setx NODE_PATH <span class="variable">%AppData%</span>\npm\node_modules</span><br></pre></td></tr></table></figure>
<blockquote>
<p>ps: setx 永久；set 当前脚本会话；</p>
</blockquote>
<blockquote>
<p>或者 我的电脑 &gt; 右键 &gt; 属性 &gt; 高级系统设置 &gt; 高级 &gt; 环境变量 &gt; 系统变量 &gt; 新建 &gt; 变量名输入NODE_PATH &gt; 变量值输入刚刚查到的全局安装目录 &gt; 确认 &gt; 出现如下图，就说明配置完成<br>![在这里插入图片描述](<a href="https://img-blog.csdnimg.cn/20200522000845516.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3E3MjM4OTI2eg==,size_16,color_FFFFFF,t_70#pic_center">https://img-blog.csdnimg.cn/20200522000845516.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3E3MjM4OTI2eg==,size_16,color_FFFFFF,t_70#pic_center</a> =500x)</p>
</blockquote>
<blockquote>
<p><code>改完环境变量后，记得重开命令行，重开以后环境变量才会生效</code></p>
</blockquote>
<blockquote>
<p>这个命令可以看看现在全局装了哪些包</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">npm list -g --depth=<span class="number">0</span></span><br></pre></td></tr></table></figure>
<p>如果想在命令行运行下载的包，就把包的安装路径放到PATH环境变量中</p>
</blockquote>
<h2 id="最终效果"><a href="#最终效果" class="headerlink" title="最终效果"></a>最终效果</h2><blockquote>
<p>重进node以后可以成功引入jimp</p>
</blockquote>
<h2 id="小插叙"><a href="#小插叙" class="headerlink" title="小插叙"></a>小插叙</h2><blockquote>
<p>以前全局安装都能直接用的，不知道为什么现在要这样配置了。<br>我还特地把node v13卸载再安装node v12也没用。<br>可能估计某种原因环境变量<code>NODE_PATH</code>没装上。<br>想起这次新电脑node的npm运行环境也是我手动配置到PATH里的~ ~<br>node查询包的顺序可以看下<code>参考资料[4]</code>和<code>参考资料[5]</code></p>
</blockquote>
<blockquote>
<p>jimp的用法可以参考<code>参考资料[7]</code></p>
</blockquote>
<h2 id="关于Yarn全局包"><a href="#关于Yarn全局包" class="headerlink" title="关于Yarn全局包"></a>关于Yarn全局包</h2><p>今天(2020年11月28日19时27分)熟悉umi框架的时候，用<code>yarn global add serve</code>下载了一个启动服务端工具。发现安装完以后提示找不到命令。下面说一说如何配置，然后可以运行yarn全局包。</p>
<blockquote>
<p>首先通过命令行输入</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">yarn global <span class="built_in">dir</span></span><br></pre></td></tr></table></figure>
<p>我的路径为<code>C:\Users\Maxmon\AppData\Local\Yarn\Data\global</code><br>获取yarn包的全局安装路径，然后将前面的<code>C:\Users\Maxmon\AppData\Local\Yarn\bin</code>加入<code>PATH</code></p>
</blockquote>
<p>配置完以后重开命令行，输入所需的命令(比如我就是<code>serve</code>)，就可以运行了</p>
<h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p>[1] 亦游. <a href="https://blog.csdn.net/tp7309/article/details/78287952">Nodejs全局安装模块后找不到命令的解决方法</a> 2017-10-19 18:25:48<br>[2]  waiaan. <a href="https://www.v2ex.com/t/452489">nodejs 突然找不到全局安装的模块了</a> 2018-05-06 10:53:30<br>[3] admin. <a href="https://exceptionshub.com/nodejs-cannot-find-installed-module-on-windows.html">Nodejs cannot find installed module on Windows?</a> 2017-11-02<br>[4] Node.js. <a href="https://nodejs.org/api/modules.html#modules_loading_from_the_global_folders">Loading from the global folders</a><br>[5] Node.js. <a href="https://nodejs.org/api/modules.html#modules_file_modules">File Modules</a><br>[6] randomness. <a href="https://stackoverflow.com/questions/12594541/npm-global-install-cannot-find-module">NPM global install “cannot find module”</a> 2013-11-26 18:15:12<br>[7] oliver.moran. <a href="https://www.npmjs.com/package/jimp">jimp - npm</a> 2020-05-16 06:30:54</p>
<h2 id="特别感谢"><a href="#特别感谢" class="headerlink" title="特别感谢"></a>特别感谢</h2><p>[1] 2020年05月21日23时34分刚学完FCN，准备开始写《百变怪奇遇记》的Maxmon</p>
]]></content>
      <tags>
        <tag>NodeJS</tag>
        <tag>NPM</tag>
      </tags>
  </entry>
  <entry>
    <title>『005』如何愉快地拿到CSDN的1024徽章ε=ε=ε=(~￣▽￣)~</title>
    <url>/2019/10/24/getCsdn1024Coin/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p><img src="https://img-blog.csdnimg.cn/2019021423465864.png#pic_center" alt="Maxmon"></p>
<blockquote>
<p>1024的徽章拿不拿？</p>
</blockquote>
<blockquote>
<p>拿拿拿！！！</p>
</blockquote>
<blockquote>
<p><code>1024</code>程序员节 发布原创文章即可获得~</p>
</blockquote>
<a id="more"></a>
<h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><ul>
<li>打开<a href="https://csdn.net/">【CSDN官网】</a></li>
<li>点击页面右上角的<a href="https://mp.csdn.net/mdeditor">【写博客】</a><br><img src="https://img-blog.csdnimg.cn/20191024214157641.png" alt="写博客按钮"> <h2 id="创作中"><a href="#创作中" class="headerlink" title="创作中"></a>创作中</h2><blockquote>
<p>在这里写一些 个人经验/学习感悟~</p>
</blockquote>
</li>
<li>放一些图片在博客里，会让读者阅读更方便哦~<br><img src="https://img-blog.csdnimg.cn/2019102421512324.png" alt="插入图片按钮"><h2 id="发布"><a href="#发布" class="headerlink" title="发布"></a>发布</h2></li>
<li>点击右上角的【发布文章】按钮<br><img src="https://img-blog.csdnimg.cn/20191024214757569.png" alt="发布文章按钮"><h2 id="填写文章分类"><a href="#填写文章分类" class="headerlink" title="填写文章分类"></a>填写文章分类</h2></li>
<li>据说粉丝可见，涨粉飞快哦~<br><img src="https://img-blog.csdnimg.cn/20191024215038770.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3E3MjM4OTI2eg==,size_16,color_FFFFFF,t_70" alt="文章分类"><h2 id="等徽章"><a href="#等徽章" class="headerlink" title="等徽章"></a>等徽章</h2></li>
<li>发布完成以后，就安静地等待1024徽章的到来就好啦~<br><img src="https://img-blog.csdnimg.cn/2019102421541125.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3E3MjM4OTI2eg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><h2 id="拿到啦"><a href="#拿到啦" class="headerlink" title="拿到啦~"></a>拿到啦~</h2><img src="https://img-blog.csdnimg.cn/20191024220112264.png" alt="1024徽章"><h2 id="感谢"><a href="#感谢" class="headerlink" title="感谢"></a>感谢</h2></li>
<li>CSDN</li>
</ul>
]]></content>
      <tags>
        <tag>CSDN</tag>
      </tags>
  </entry>
  <entry>
    <title>百度之星2020</title>
    <url>/2020/08/12/baidu2020/</url>
    <content><![CDATA[<blockquote>
<p>百度之星2020 复赛解决方案，检测使用了ResNext152，然后用了一些规则做了后处理</p>
</blockquote>
<a id="more"></a>
<h1 id="项目地址"><a href="#项目地址" class="headerlink" title="项目地址"></a>项目地址</h1><p><a href="https://gitee.com/ko-orz/baidu2020_no_20">https://gitee.com/ko-orz/baidu2020_no_20</a></p>
<h1 id="模型记录"><a href="#模型记录" class="headerlink" title="模型记录"></a>模型记录</h1><p><img src="modelRecord.png" alt="模型记录"></p>
]]></content>
      <tags>
        <tag>AI</tag>
        <tag>NodeJS</tag>
        <tag>计算机视觉</tag>
        <tag>PaddlePaddle</tag>
        <tag>Canvas</tag>
      </tags>
  </entry>
  <entry>
    <title>手动实现压缩算法</title>
    <url>/2018/06/06/compress/</url>
    <content><![CDATA[<blockquote>
<p>2.5倍的压缩率</p>
</blockquote>
<a id="more"></a>
<p><a href="https://gitee.com/ko-orz/compression_algorithm/commits/master">项目地址</a></p>
]]></content>
      <tags>
        <tag>NodeJS</tag>
        <tag>压缩</tag>
      </tags>
  </entry>
  <entry>
    <title>GeekPwnTTS 2017 优胜奖比赛源码</title>
    <url>/2017/10/21/GeekPwnTTS/</url>
    <content><![CDATA[<h1 id="GeekPwnTTS"><a href="#GeekPwnTTS" class="headerlink" title="GeekPwnTTS"></a>GeekPwnTTS</h1><p>This is src code of textToSpeech.</p>
<p><a href="https://gitee.com/ko-orz/GeekPwnTTS/">https://gitee.com/ko-orz/GeekPwnTTS/</a></p>
<h2 id="用法说明"><a href="#用法说明" class="headerlink" title="用法说明"></a>用法说明</h2><p>1.util中的splitWav&amp;silentWav.js可以做到切分原始语音，变成多个语音片段；<br>2.util中的pinYinUtil.js可以提取中文的拼音；<br>3.util中的getPinYinCount.js可以判断音节归档的完成度；<br>4.textToSpeech.js生成语音文件</p>
<a id="more"></a>
<h2 id="技术说明"><a href="#技术说明" class="headerlink" title="技术说明"></a>技术说明</h2><h3 id="语音去噪"><a href="#语音去噪" class="headerlink" title="语音去噪"></a>语音去噪</h3><p>1.判断语音数据中是否有连续的低于阈值的部分；<br>2.有就直接将这部分声音置零；</p>
<h3 id="语音分割"><a href="#语音分割" class="headerlink" title="语音分割"></a>语音分割</h3><p>1.将停顿点作为语音分割点；<br>2.将语音切割为多个语音片段；</p>
<h3 id="语音平滑处理"><a href="#语音平滑处理" class="headerlink" title="语音平滑处理"></a>语音平滑处理</h3><p>1.找到语音片段的开头波段和结尾波段；<br>2.判断波段是否在0附近，不在的话，剔除改周期，直到下周起的0值；<br>3.这样处理以后，就不会出现波段不平滑，周期不自然的情况；</p>
<h3 id="音节识别（未实现）"><a href="#音节识别（未实现）" class="headerlink" title="音节识别（未实现）"></a>音节识别（未实现）</h3><p>1.将切好的语音与预设的语音作比较；<br>2.相似度高则判定通过；<br>3.需要通过HMM(Hidden Markov Model)/GMM(Gaussian Mixture Model)等的知识；<br>4.需要训练音节模型；</p>
<h3 id="归档音节"><a href="#归档音节" class="headerlink" title="归档音节"></a>归档音节</h3><p>1.自动归档识别好的音节；<br>2.不仅是音节，还要做好整字，整词，整句的归档，提高可识别度；<br>3.本处直接采用了人工归档，就是一个一个听，然后右键保存啦O(∩_∩)O;</p>
<h3 id="录音器材猜想（未实现）"><a href="#录音器材猜想（未实现）" class="headerlink" title="录音器材猜想（未实现）"></a>录音器材猜想（未实现）</h3><p>1.通过直接录取不同频率的声音，建模会更好处理，因为现在的录音设备是把不同频率混在一起了，很难分离；<br>2.该录音器可以参考人的耳蜗，是旋涡形状的，越到内部识别越高频率的声音，越外面识别月低评率的声音；</p>
<h3 id="切词-产生顿挫感觉"><a href="#切词-产生顿挫感觉" class="headerlink" title="切词,产生顿挫感觉"></a>切词,产生顿挫感觉</h3><p>1.导入大量网络文本资源；<br>2.建立一个字典，把文字循环丢入字典中；<br>3.直接将出现次数最多的组合作为一个词；<br>4.出现较少的可以通过TFIDF算法来提升这个词的权重；<br>5.项目还未完善，本处直接使用了jieba切词；</p>
<h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p>1.<a href="https://www.zhihu.com/question/38853154">声纹鉴定能否鉴定经过变声器的声音？</a><br>2.<a href="https://www.zhihu.com/question/24190826/answer/32419809">什么是共振峰？</a><br>3.<a href="http://www.bubuko.com/infodetail-2055350.html">音频特征提取————常用音频特征</a><br>4.<a href="http://blog.jobbole.com/58246/">理解快速傅里叶变换（FFT）算法</a><br>5.<a href="http://tieba.baidu.com/p/2513502552">用最简单的方式实现FFT</a><br>6.<a href="http://www.fftw.org/burrus-notes.html">Notes on the FFT</a><br>7.<a href="https://wenku.baidu.com/view/8bfb0bd476a20029bd642d85.html">FFT算法介绍</a><br>8.<a href="http://blog.csdn.net/leixiaohua1020/article/details/50535042">视音频数据处理入门</a><br>9.<a href="https://wenku.baidu.com/view/972457e06294dd88d1d26b06.html">声纹识别特征的特征参数提取</a><br>10.<a href="https://www.zhihu.com/question/20213109">中国汉子有多少个发音？</a><br>11.<a href="http://htmfiles.englishhome.org/pinyin/bopomofo.htm#English">国语拼音对照表</a><br>12.<a href="http://www.cnblogs.com/yangzizhen/p/4112763.html">wav格式解析</a><br>13.<a href="http://www.dugoogle.com/shijiezhizui/technology-22498/">世界上十个最伟大的公式</a></p>
]]></content>
      <tags>
        <tag>NodeJS</tag>
        <tag>TTS</tag>
        <tag>音频处理</tag>
      </tags>
  </entry>
  <entry>
    <title>微信小程序埋点工具</title>
    <url>/2020/06/10/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%9F%8B%E7%82%B9%E5%B7%A5%E5%85%B7/</url>
    <content><![CDATA[<h1 id="开发之前"><a href="#开发之前" class="headerlink" title="开发之前"></a>开发之前</h1><ol>
<li>将AppID和AppSecret提供给天奇达人的商务（下面简称天奇商务），获取地址为微信小程序后台（<a href="https://mp.weixin.qq.com/">https://mp.weixin.qq.com/</a>）的 开发&gt;开发设置&gt;开发者ID（如果AppSecret之前已经获取过，请将之前保存的AppSecret交给商务，为避免影响线上业务，【请不要点击重置按钮】！！！）；</li>
<li>在微信小程序后台的 开发&gt;开发设置&gt;服务器域名&gt;request合法域名 中，添加【<a href="https://tekii.cn】用于记录小程序广告相关的数据;/">https://tekii.cn】用于记录小程序广告相关的数据；</a></li>
<li>天奇商务在和天奇的后台开发人员沟通后，会在1个工作日内，提供tSecret（天奇分配的密钥）用于后续鉴权开发；<a id="more"></a>

</li>
</ol>
<h1 id="sdk开发相关"><a href="#sdk开发相关" class="headerlink" title="sdk开发相关"></a>sdk开发相关</h1><p>sdk开发分为 广告主端和流量主端，两者【都需要】在app.js中接入tekiiUtil的init初始化函数。</p>
<p>  流量主端需要在跳转小程序的路径中带上目标appid和tid参数（tid（用户唯一码）在init之后，已保存在小程序本地，可通过wx.getStorageSync(‘tid’)获取到）（也可以通过直接调用tekiiUtil.toad函数，目标appid和tid会自动拼接到path中）</p>
<p>  广告主端需要在所有可能产生收益的地方调用tekiiUtil.logad函数</p>
<p>下面是初始化代码，需要写在app.js<code>最开头</code>（如果是小游戏，就写在game.js最开头）</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> tekiiUtil = <span class="built_in">require</span>(<span class="string">&#x27;./tekiiUtil.js&#x27;</span>) <span class="comment">// 路径请根据实际情况调整</span></span><br><span class="line">tekiiUtil.init(&#123;</span><br><span class="line">  tSecret: <span class="string">&#x27;change to your tSecret&#x27;</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<p>在需要跳转小程序的地方调用toad跳转函数</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> tekiiUtil = <span class="built_in">require</span>(<span class="string">&#x27;../../tekiiUtil.js&#x27;</span>) <span class="comment">// 路径请根据实际情况调整</span></span><br><span class="line">tekiiUtil.toad(<span class="string">&#x27;目标小程序appid&#x27;</span>, <span class="string">&#x27;目标小程序path&#x27;</span>)</span><br></pre></td></tr></table></figure>

<p>在用户能产生收益的地方调用logad记录函数</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> tekiiUtil = <span class="built_in">require</span>(<span class="string">&#x27;../../tekiiUtil.js&#x27;</span>) <span class="comment">// 路径请根据实际情况调整</span></span><br><span class="line">tekiiUtil.logad(</span><br><span class="line">    <span class="string">&#x27;目标小程序的appid&#x27;</span>, <span class="comment">// 记录视频类广告可不填写</span></span><br><span class="line">    <span class="string">&#x27;收益类型&#x27;</span>, <span class="comment">// 比如跳转其他小程序，就填写 1（类型: 1、跳转其他小程序; 2、微信banner广告; 3、微信插屏广告; 4、微信激励视频广告; 5、用户分享; 6、其他）</span></span><br><span class="line">    <span class="string">&#x27;备注&#x27;</span> <span class="comment">// 记录一些需要备注的事项，比如跳转路径，收益类型为 6 时的情况说明</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure>

<p>关于接入自己的广告素材，请参考templet文件夹</p>
<h1 id="项目地址"><a href="#项目地址" class="headerlink" title="项目地址"></a>项目地址</h1><p>欢迎有能力的开发者协助我们改进这个SDK<br><a href="https://gitee.com/ko-orz/tekiiSDK">https://gitee.com/ko-orz/tekiiSDK</a></p>
]]></content>
      <tags>
        <tag>微信</tag>
        <tag>小程序</tag>
        <tag>uni-app</tag>
      </tags>
  </entry>
</search>
